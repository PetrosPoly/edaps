Running on node: biwirender11
In directory: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps
Starting on: Thu Nov  9 17:48:37 CET 2023
SLURM_JOB_ID: 759326
CUDA_VISIBLE_DEVICES: 0
2023-11-09 17:49:01,882 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.5 (default, Sep  4 2020, 07:30:14) [GCC 7.3.0]
CUDA available: True
GPU 0: NVIDIA GeForce GTX TITAN X
CUDA_HOME: /usr
NVCC: Cuda compilation tools, release 11.2, V11.2.152
GCC: gcc (Debian 8.3.0-6) 8.3.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.8.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+dcf9092
------------------------------------------------------------

2023-11-09 17:49:03,336 - mmdet - INFO - Distributed training: False
2023-11-09 17:49:04,873 - mmdet - INFO - Config:
checkpoint_config = dict(interval=3, by_epoch=False, max_keep_ckpts=1)
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
num_instance_classes = 8
norm_cfg = dict(type='BN', requires_grad=True)
find_unused_parameters = True
maskrcnn_losses_weights = 1.0
model = dict(
    type='MaskRCNNPanoptic',
    pretrained='pretrained/mit_b5.pth',
    backbone=dict(type='mit_b5', style='pytorch'),
    use_neck_feat_for_decode_head=False,
    decode_head=dict(
        type='DAFormerHead',
        in_channels=[64, 128, 320, 512],
        in_index=[0, 1, 2, 3],
        channels=256,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        decoder_params=dict(
            embed_dims=256,
            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            fusion_cfg=dict(
                type='aspp',
                sep=True,
                dilations=(1, 6, 12, 18),
                pool=False,
                act_cfg=dict(type='ReLU'),
                norm_cfg=dict(type='BN', requires_grad=True))),
        loss_decode=dict(
            type='CrossEntropyLossMmseg', use_sigmoid=False, loss_weight=1.0)),
    neck=dict(
        type='FPN',
        in_channels=[64, 128, 320, 512],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=8,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False),
        work_dir=
        'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572'
    ),
    test_cfg=dict(
        mode='whole',
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CityscapesDataset'
data_root = 'data/cityscapes/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (256, 256)
num_classes = 19
synthia_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadPanopticAnnotations'),
    dict(type='Resize', img_scale=(1280, 760)),
    dict(type='RandomCrop', crop_size=(256, 256), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='GenPanopLabelsForMaskFormer',
        sigma=8,
        mode='train',
        num_classes=19,
        gen_instance_classids_from_zero=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(
        type='Collect',
        keys=[
            'img', 'gt_bboxes', 'gt_labels', 'gt_masks', 'gt_semantic_seg',
            'gt_panoptic_only_thing_classes', 'max_inst_per_class',
            'panoptic_labels_list', 'unique_labels_list', 'indices_list'
        ])
]
cityscapes_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', img_scale=(1024, 512)),
    dict(type='RandomCrop', crop_size=(256, 256)),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(type='Collect', keys=['img'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=0,
    train=dict(
        type='UDADataset',
        source=dict(
            type='SynthiaDataset',
            data_root='data/synthia/',
            img_dir='RGB',
            depth_dir='',
            ann_dir='panoptic-labels-crowdth-0-for-daformer/synthia_panoptic',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadPanopticAnnotations'),
                dict(type='Resize', img_scale=(1280, 760)),
                dict(
                    type='RandomCrop',
                    crop_size=(256, 256),
                    cat_max_ratio=0.75),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='GenPanopLabelsForMaskFormer',
                    sigma=8,
                    mode='train',
                    num_classes=19,
                    gen_instance_classids_from_zero=True),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(
                    type='Collect',
                    keys=[
                        'img', 'gt_bboxes', 'gt_labels', 'gt_masks',
                        'gt_semantic_seg', 'gt_panoptic_only_thing_classes',
                        'max_inst_per_class', 'panoptic_labels_list',
                        'unique_labels_list', 'indices_list'
                    ])
            ]),
        target=dict(
            type='CityscapesDataset',
            data_root='data/cityscapes/',
            img_dir='leftImg8bit/train',
            depth_dir='',
            ann_dir='gtFine_panoptic/cityscapes_panoptic_train_trainId',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='Resize', img_scale=(1024, 512)),
                dict(type='RandomCrop', crop_size=(256, 256)),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(type='Collect', keys=['img'])
            ]),
        rare_class_sampling=dict(
            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),
    val=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic_debug/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
uda = dict(
    type='DACS',
    alpha=0.999,
    pseudo_threshold=0.968,
    pseudo_weight_ignore_top=15,
    pseudo_weight_ignore_bottom=120,
    imnet_feature_dist_lambda=0.005,
    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],
    imnet_feature_dist_scale_min_ratio=0.75,
    mix='class',
    blur=True,
    color_jitter_strength=0.2,
    color_jitter_probability=0.2,
    debug_img_interval=1,
    print_grad_magnitude=False,
    share_src_backward=True,
    disable_mix_masks=False)
use_ddp_wrapper = True
optimizer = dict(
    type='AdamW',
    lr=6e-05,
    betas=(0.9, 0.999),
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            neck=dict(lr_mult=10.0),
            head=dict(lr_mult=10.0),
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = None
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
debug = True
n_gpus = 1
gpu_mtotal = 23000
total_train_time = '24:00:00'
n_cpus = 16
mem_per_cpu = 16000
machine = 'local'
only_eval = False
only_train = False
activate_auto_scale_lr = False
auto_scale_lr = dict(enable=False, base_batch_size=16)
print_layer_wise_lr = False
file_sys = 'Slurm'
launcher = None
generate_only_visuals_without_eval = False
dump_predictions_to_disk = False
evaluate_from_saved_png_predictions = False
panop_eval_temp_folder_previous = None
exp_sub = 'exp-00001'
exp_root = 'edaps_experiments'
seed = 0
evaluation = dict(
    interval=3,
    metric=['mIoU', 'mPQ', 'mAP'],
    eval_type='maskrcnn_panoptic',
    dataset_name='cityscapes',
    gt_dir='data/cityscapes/gtFine/val',
    gt_dir_panop='data/cityscapes/gtFine_panoptic',
    num_samples_debug=12,
    post_proccess_params=dict(
        num_classes=19,
        ignore_label=255,
        mapillary_dataloading_style='OURS',
        label_divisor=1000,
        train_id_to_eval_id=[
            7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31,
            32, 33, 0
        ],
        thing_list=[11, 12, 13, 14, 15, 16, 17, 18],
        mask_score_threshold=0.95,
        debug=True,
        dump_semantic_pred_as_numpy_array=False,
        load_semantic_pred_as_numpy_array=False,
        semantic_pred_numpy_array_location=None,
        use_semantic_decoder_for_instance_labeling=False,
        use_semantic_decoder_for_panoptic_labeling=False,
        nms_th=None,
        intersec_th=None,
        upsnet_mask_pruning=False,
        generate_thing_cls_panoptic_from_instance_pred=False),
    visuals_pan_eval=False,
    evalScale=None,
    evaluate_from_saved_numpy_predictions=False,
    evaluate_from_saved_png_predictions=False,
    panop_eval_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval',
    panop_eval_temp_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789',
    debug=True,
    out_dir=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/visuals'
)
runner = dict(type='IterBasedRunner', max_iters=100)
name = '231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572'
exp = 1
name_dataset = 'synthia2cityscapes'
name_architecture = 'maskrcnn_mitb5'
name_encoder = 'mitb5'
name_decoder = 'maskrcnn'
name_uda = 'dacs_rcs0.01_cpl'
name_opt = 'adamw_6e-05_pmTrue_poly10warm_1x1_0k'
work_dir = 'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572'
git_rev = 'dcf90925210a3061f3ba0ef8c1c557a1ba7360a4'
auto_resume = False
gpu_ids = [0]

2023-11-09 17:49:04,873 - mmdet - INFO - Set random seed to 0, deterministic: False
2023-11-09 17:49:04,874 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - BEFORE MODEL BUILD
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/detectors/two_stage.py:29: UserWarning: DeprecationWarning: pretrained is deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is deprecated, '
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/backbones/mix_transformer.py:215: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead')
2023-11-09 17:49:08,743 - mmdet - INFO - Load mit checkpoint.
2023-11-09 17:49:08,744 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 17:49:12,015 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 17:49:12,041 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 17:49:12,048 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 17:49:12,179 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 17:49:12,249 - mmdet - INFO - Load mit checkpoint.
2023-11-09 17:49:12,249 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 17:49:12,598 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 17:49:12,618 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 17:49:12,625 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 17:49:12,752 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 17:49:12,822 - mmdet - INFO - Load mit checkpoint.
2023-11-09 17:49:12,822 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 17:49:13,216 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 17:49:13,239 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 17:49:13,246 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 17:49:13,378 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 17:49:13,493 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - MODEL IS READY
2023-11-09 17:49:13,494 - mmseg - INFO - Loaded annotations from : data/synthia/panoptic-labels-crowdth-0-for-daformer/synthia_panoptic.json
2023-11-09 17:49:23,333 - mmseg - INFO - Loaded 9400 images from data/synthia/RGB
2023-11-09 17:49:23,338 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic/cityscapes_panoptic_train_trainId.json
2023-11-09 17:49:23,794 - mmseg - INFO - Loaded 2975 images from data/cityscapes/leftImg8bit/train
2023-11-09 17:49:23,885 - mmseg - INFO - RCS Classes: [6, 7, 17, 18, 4, 3, 12, 5, 15, 13, 11, 10, 8, 0, 1, 2]
2023-11-09 17:49:23,886 - mmseg - INFO - RCS ClassProb: [1.55649453e-01 1.45927146e-01 1.30805254e-01 1.29144296e-01
 1.22819245e-01 1.22646019e-01 9.97279957e-02 5.53424992e-02
 3.33626680e-02 2.43163528e-03 2.00466975e-03 1.35448776e-04
 3.78220921e-06 8.31826052e-10 3.41141226e-10 1.11511794e-14]
2023-11-09 17:49:36,858 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-11-09 17:49:47,581 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic_debug/cityscapes_panoptic_val.json
2023-11-09 17:49:47,587 - mmseg - INFO - Loaded 12 images from data/cityscapes/leftImg8bit/val
2023-11-09 17:49:47,587 - mmdet - INFO - Start running, host: ppolydorou@biwirender11, work_dir: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572
2023-11-09 17:49:47,588 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
 -------------------- 
after_train_iter:
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-09 17:49:47,588 - mmdet - INFO - workflow: [('train', 1)], max: 100 iters
2023-11-09 17:49:47,589 - mmdet - INFO - Checkpoints will be saved to /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572 by HardDiskBackend.
2023-11-09 17:49:47,589 - mmdet - INFO - The best checkpoint will be saved to edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/visuals/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572 by HardDiskBackend
2023-11-09 17:49:57,746 - mmdet - INFO - Iter [1/100]	lr: 6.000e-11, eta: 0:16:45, time: 10.152, data_time: 3.317, memory: 2500, decode.loss_seg: 1.8488, decode.acc_seg: 7.0496, rpn.loss_rpn_cls: 0.6839, rpn.loss_rpn_bbox: 0.1180, roi.loss_cls: 2.3688, roi.acc: 3.7109, roi.loss_bbox: 0.2174, roi.loss_mask: 2.5760, src.loss_imnet_feat_dist: 0.0711, mix.decode.loss_seg: 1.1861, mix.decode.acc_seg: 3.1219
2023-11-09 17:50:03,927 - mmdet - INFO - Iter [2/100]	lr: 3.966e-08, eta: 0:13:20, time: 6.177, data_time: 0.391, memory: 3223, decode.loss_seg: 2.9126, decode.acc_seg: 1.1658, rpn.loss_rpn_cls: 0.6725, rpn.loss_rpn_bbox: 0.0742, roi.loss_cls: 2.3193, roi.acc: 4.1016, roi.loss_bbox: 0.1870, roi.loss_mask: 2.1039, src.loss_imnet_feat_dist: 0.0484, mix.decode.loss_seg: 1.7042, mix.decode.acc_seg: 9.1415
2023-11-09 17:50:11,064 - mmdet - INFO - Saving checkpoint at 3 iterations
2023-11-09 17:50:37,729 - mmdet - INFO - Iter [3/100]	lr: 7.846e-08, eta: 0:27:00, time: 33.805, data_time: 1.154, memory: 3226, decode.loss_seg: 2.8667, decode.acc_seg: 4.2282, rpn.loss_rpn_cls: 0.6777, rpn.loss_rpn_bbox: 0.0815, roi.loss_cls: 2.5328, roi.acc: 0.7812, roi.loss_bbox: 0.2029, roi.loss_mask: 1.9805, src.loss_imnet_feat_dist: 0.0811, mix.decode.loss_seg: 0.9272, mix.decode.acc_seg: 13.6353
_base_/default_runtime_mmdet_mr.py
_base_/models/maskrcnn_sepaspp_mitb5.py
_base_/datasets/uda_synthia_to_cityscapes_maskrcnn_panoptic.py
_base_/uda/dacs_a999_fdthings.py
_base_/schedules/adamw.py
_base_/schedules/poly10warm.py
Run job 231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572
DEBUG - PETROS 20-08-2023 - data root is : data/synthia/
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG - PETROS 20-08-2023 - data root is : data/cityscapes/
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG - PETROS 20-08-2023 - data root is : data/cityscapes
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Number of gpus for training is: 1
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Samples per gpu is: 1
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Workers per gpu is: 0
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Batch_size: 1
[                                                  ] 0/12, elapsed: 0s, ETA:[>>                                ] 1/12, 0.4 task/s, elapsed: 2s, ETA:    26s[>>>>>                             ] 2/12, 0.4 task/s, elapsed: 5s, ETA:    23s[>>>>>>>>                          ] 3/12, 0.5 task/s, elapsed: 7s, ETA:    20s[>>>>>>>>>>>                       ] 4/12, 0.5 task/s, elapsed: 9s, ETA:    18s[>>>>>>>>>>>>>                    ] 5/12, 0.5 task/s, elapsed: 11s, ETA:    15s[>>>>>>>>>>>>>>>>                 ] 6/12, 0.5 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>>>>>>              ] 7/12, 0.5 task/s, elapsed: 15s, ETA:    11s[>>>>>>>>>>>>>>>>>>>>>>           ] 8/12, 0.5 task/s, elapsed: 17s, ETA:     9s[>>>>>>>>>>>>>>>>>>>>>>>>         ] 9/12, 0.5 task/s, elapsed: 19s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>>>>>>      ] 10/12, 0.5 task/s, elapsed: 22s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 11/12, 0.5 task/s, elapsed: 24s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 12/12, 0.5 task/s, elapsed: 26s, ETA:     0s2023-11-09 17:51:03,597 - mmdet - INFO - 
2023-11-09 17:51:04,454 - mmdet - INFO - generating panoptic labels for imgid:  1
2023-11-09 17:51:07,155 - mmdet - INFO - generating panoptic labels for imgid:  2
2023-11-09 17:51:08,254 - mmdet - INFO - generating panoptic labels for imgid:  3
2023-11-09 17:51:12,201 - mmdet - INFO - generating panoptic labels for imgid:  4
2023-11-09 17:51:15,522 - mmdet - INFO - generating panoptic labels for imgid:  5
2023-11-09 17:51:18,507 - mmdet - INFO - generating panoptic labels for imgid:  6
2023-11-09 17:51:20,885 - mmdet - INFO - generating panoptic labels for imgid:  7
2023-11-09 17:51:23,391 - mmdet - INFO - generating panoptic labels for imgid:  8
2023-11-09 17:51:25,635 - mmdet - INFO - generating panoptic labels for imgid:  9
2023-11-09 17:51:26,491 - mmdet - INFO - generating panoptic labels for imgid:  10
2023-11-09 17:51:27,760 - mmdet - INFO - generating panoptic labels for imgid:  11
2023-11-09 17:51:29,655 - mmdet - INFO - generating panoptic labels for imgid:  12
2023-11-09 17:51:29,660 - mmdet - INFO - tools/panoptic_deeplab/eval/instance.py --> class CityscapesInstanceEvaluator: --> def __init__() --> self.logger : <Logger mmdet (INFO)>
2023-11-09 17:51:29,661 - mmdet - INFO - tools/panoptic_deeplab/eval/semantic.py -->  def __init__() --> self._logger : <Logger mmdet (INFO)>
2023-11-09 17:51:29,663 - mmdet - INFO - tools/panoptic_deeplab/eval/panoptic.py --> class CityscapesPanopticEvaluator: --> def __init__() --> self._logger : <Logger mmdet (INFO)>
2023-11-09 17:51:29,729 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_000294_gtFine_panoptic.png
2023-11-09 17:51:29,906 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_000294_gtFine_panoptic.png
2023-11-09 17:51:29,908 - mmdet - INFO - [0/12]	Post-processing Time: 0.245s (0.245s)	
2023-11-09 17:51:29,974 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_000576_gtFine_panoptic.png
2023-11-09 17:51:30,143 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_000576_gtFine_panoptic.png
2023-11-09 17:51:30,145 - mmdet - INFO - [1/12]	Post-processing Time: 0.237s (0.241s)	
2023-11-09 17:51:30,207 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_001016_gtFine_panoptic.png
2023-11-09 17:51:30,371 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_001016_gtFine_panoptic.png
2023-11-09 17:51:30,372 - mmdet - INFO - [2/12]	Post-processing Time: 0.228s (0.236s)	
2023-11-09 17:51:30,434 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_001236_gtFine_panoptic.png
2023-11-09 17:51:30,611 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_001236_gtFine_panoptic.png
2023-11-09 17:51:30,613 - mmdet - INFO - [3/12]	Post-processing Time: 0.240s (0.237s)	
2023-11-09 17:51:30,678 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_001751_gtFine_panoptic.png
2023-11-09 17:51:30,842 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_001751_gtFine_panoptic.png
2023-11-09 17:51:30,844 - mmdet - INFO - [4/12]	Post-processing Time: 0.231s (0.236s)	
2023-11-09 17:51:30,906 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_002196_gtFine_panoptic.png
2023-11-09 17:51:31,074 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_002196_gtFine_panoptic.png
2023-11-09 17:51:31,075 - mmdet - INFO - [5/12]	Post-processing Time: 0.232s (0.235s)	
2023-11-09 17:51:31,141 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_002963_gtFine_panoptic.png
2023-11-09 17:51:31,311 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_002963_gtFine_panoptic.png
2023-11-09 17:51:31,313 - mmdet - INFO - [6/12]	Post-processing Time: 0.237s (0.236s)	
2023-11-09 17:51:31,375 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_003025_gtFine_panoptic.png
2023-11-09 17:51:31,539 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_003025_gtFine_panoptic.png
2023-11-09 17:51:31,540 - mmdet - INFO - [7/12]	Post-processing Time: 0.227s (0.235s)	
2023-11-09 17:51:31,603 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_003357_gtFine_panoptic.png
2023-11-09 17:51:31,780 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_003357_gtFine_panoptic.png
2023-11-09 17:51:31,782 - mmdet - INFO - [8/12]	Post-processing Time: 0.241s (0.235s)	
2023-11-09 17:51:31,847 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_003920_gtFine_panoptic.png
2023-11-09 17:51:32,011 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_003920_gtFine_panoptic.png
2023-11-09 17:51:32,013 - mmdet - INFO - [9/12]	Post-processing Time: 0.231s (0.235s)	
2023-11-09 17:51:32,075 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_004617_gtFine_panoptic.png
2023-11-09 17:51:32,241 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_004617_gtFine_panoptic.png
2023-11-09 17:51:32,243 - mmdet - INFO - [10/12]	Post-processing Time: 0.230s (0.230s)	
2023-11-09 17:51:32,309 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/semantic/frankfurt_000000_005543_gtFine_panoptic.png
2023-11-09 17:51:32,481 - mmdet - INFO - File saved at: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions/frankfurt_000000_005543_gtFine_panoptic.png
2023-11-09 17:51:32,482 - mmdet - INFO - [11/12]	Post-processing Time: 0.240s (0.235s)	
2023-11-09 17:51:32,482 - mmdet - INFO - Inference finished.
2023-11-09 17:51:32,482 - mmdet - INFO - Evaluating ...
2023-11-09 17:51:32,483 - mmdet - INFO - Evaluating results under edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance ...
2023-11-09 17:51:32,483 - mmdet - INFO - tools/panoptic_deeplab/eval/instance.py --> class CityscapesInstanceEvaluator: --> def evaluate()
2023-11-09 17:51:32,483 - mmdet - INFO - gt_dir: data/cityscapes/gtFine/val
2023-11-09 17:51:32,483 - mmdet - INFO - self.dataset_name: cityscapes
2023-11-09 17:51:32,557 - mmdet - INFO - len(groundTruthImgList)=500
2023-11-09 17:51:32,557 - mmdet - INFO - groundTruthImgList:
2023-11-09 17:51:32,565 - mmdet - INFO - predictionImgList:
2023-11-09 17:51:32,565 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003025_gtFine_instanceIds.png
2023-11-09 17:51:32,565 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_003025_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,565 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003357_gtFine_instanceIds.png
2023-11-09 17:51:32,565 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_003357_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,565 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_004617_gtFine_instanceIds.png
2023-11-09 17:51:32,565 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_004617_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,565 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003920_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_003920_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_000294_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_000294_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001236_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_001236_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_002196_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_002196_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_000576_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_000576_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_005543_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_005543_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001016_gtFine_instanceIds.png
2023-11-09 17:51:32,566 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_001016_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,566 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_002963_gtFine_instanceIds.png
2023-11-09 17:51:32,567 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_002963_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,567 - mmdet - INFO - groundTruthImg: data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001751_gtFine_instanceIds.png
2023-11-09 17:51:32,567 - mmdet - INFO - predictionImg: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/instance/frankfurt_000000_001751_gtFine_panoptic_pred.txt
2023-11-09 17:51:32,567 - mmdet - INFO - From def setInstanceLabels(args): --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:32,567 - mmdet - INFO - args.instLabels: ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
2023-11-09 17:51:32,567 - mmdet - INFO - Creating ground truth instances from png files.
####### eval_type=maskrcnn_panoptic #######
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
DEBUG - PETROS 18-09-2023 - GEN GT PANOPTIC LABEL CALL
Processing 12 images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 2023-11-09 17:51:33,076 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003025_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003357_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_004617_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_003920_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_000294_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001236_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_002196_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_000576_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_005543_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001016_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_002963_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - gtInstances key : /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/data/cityscapes/gtFine/val/frankfurt/frankfurt_000000_001751_gtFine_instanceIds.png
2023-11-09 17:51:33,077 - mmdet - INFO - in def matchGtWithPreds() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py : Matching 12 pairs of images...
2023-11-09 17:51:33,077 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,102 - mmdet - INFO - Images Processed: 1

2023-11-09 17:51:33,103 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,127 - mmdet - INFO - Images Processed: 2
2023-11-09 17:51:33,128 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,152 - mmdet - INFO - Images Processed: 3
2023-11-09 17:51:33,152 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,178 - mmdet - INFO - Images Processed: 4
2023-11-09 17:51:33,178 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,201 - mmdet - INFO - Images Processed: 5
2023-11-09 17:51:33,202 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,225 - mmdet - INFO - Images Processed: 6
2023-11-09 17:51:33,226 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,250 - mmdet - INFO - Images Processed: 7
2023-11-09 17:51:33,250 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,274 - mmdet - INFO - Images Processed: 8
2023-11-09 17:51:33,275 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,300 - mmdet - INFO - Images Processed: 9
2023-11-09 17:51:33,301 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,324 - mmdet - INFO - Images Processed: 10
2023-11-09 17:51:33,324 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,349 - mmdet - INFO - Images Processed: 11
2023-11-09 17:51:33,350 - mmdet - INFO - in debug mode downsample the Cityscapes GT labels to 512 x 1024 : From def readGTImage() --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,374 - mmdet - INFO - Images Processed: 12
2023-11-09 17:51:33,374 - mmdet - INFO - 
2023-11-09 17:51:33,381 - mmdet - INFO - From def evaluateMatches(matches, args): --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,381 - mmdet - INFO - args.instLabels: ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
2023-11-09 17:51:33,400 - mmdet - INFO - From def computeAverages(aps,args): --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,400 - mmdet - INFO - args.instLabels: ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
2023-11-09 17:51:33,401 - mmdet - INFO - From def prepareJSONDataForResults(avgDict, aps, args): --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,401 - mmdet - INFO - args.instLabels: ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
2023-11-09 17:51:33,401 - mmdet - INFO - From def printResults(avgDict, args): --> cityscapesscripts/evaluation/evalInstanceLevelSemanticLabeling.py
2023-11-09 17:51:33,401 - mmdet - INFO - args.instLabels: ['person', 'rider', 'car', 'truck', 'bus', 'train', 'motorcycle', 'bicycle']
2023-11-09 17:51:33,401 - mmdet - INFO - 
2023-11-09 17:51:33,401 - mmdet - INFO - ##################################################
2023-11-09 17:51:33,401 - mmdet - INFO - what           :             AP         AP_50%
2023-11-09 17:51:33,401 - mmdet - INFO - ##################################################
2023-11-09 17:51:33,401 - mmdet - INFO - person         :          0.000          0.000
2023-11-09 17:51:33,401 - mmdet - INFO - rider          :          0.000          0.000
2023-11-09 17:51:33,401 - mmdet - INFO - car            :          0.000          0.000
2023-11-09 17:51:33,401 - mmdet - INFO - truck          :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - bus            :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - train          :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - motorcycle     :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - bicycle        :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - --------------------------------------------------
2023-11-09 17:51:33,402 - mmdet - INFO - average        :          0.000          0.000
2023-11-09 17:51:33,402 - mmdet - INFO - 
2023-11-09 17:51:33,402 - mmdet - INFO - OrderedDict([('segm', {'AP': 0.0, 'AP50': 0.0})])
2023-11-09 17:51:33,532 - mmdet - INFO - Evaluation panoptic segmentation metrics:
2023-11-09 17:51:33,532 - mmdet - INFO - Ground truth:
2023-11-09 17:51:33,532 - mmdet - INFO - 	Segmentation folder: data/cityscapes/gtFine_panoptic/cityscapes_panoptic_val
2023-11-09 17:51:33,532 - mmdet - INFO - 	JSON file: data/cityscapes/gtFine_panoptic/cityscapes_panoptic_val.json
2023-11-09 17:51:33,532 - mmdet - INFO - Prediction:
2023-11-09 17:51:33,532 - mmdet - INFO - 	Segmentation folder: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions
2023-11-09 17:51:33,532 - mmdet - INFO - 	JSON file: edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1749_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ad572/panoptic_eval/panop_eval_09-11-2023_17-49-01-786789/panoptic/predictions.json
Traceback (most recent call last):
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 55, in wrapper
    return f(*args, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 182, in pq_compute_single_core
    pan_gt_pred = pan_gt.astype(np.uint64) * OFFSET + pan_pred.astype(np.uint64)
ValueError: operands could not be broadcast together with shapes (512,1024) (1024,2048) 
Traceback (most recent call last):
  File "run_experiments.py", line 146, in <module>
    train_mmdet.main([config_files[i]])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/tools/train_mmdet.py", line 127, in main
    train_detector(model, datasets, cfg, distributed=distributed, validate=(not cfg.only_train), timestamp=timestamp,  meta=meta,)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/apis/train.py", line 214, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 70, in train
    self.call_hook('after_train_iter')
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/base_runner.py", line 317, in call_hook
    getattr(hook, fn_name)(self)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/hooks/evaluation.py", line 266, in after_train_iter
    self._do_evaluate(runner)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/core/evaluation/eval_hooks.py", line 66, in _do_evaluate
    key_score = self.evaluate(runner, results)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/hooks/evaluation.py", line 367, in evaluate
    eval_res = self.dataloader.dataset.evaluate(
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmseg/datasets/cityscapes.py", line 189, in evaluate
    super(CityscapesDataset, self).evaluate_panoptic_for_maskrcnn(
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmseg/datasets/custom.py", line 711, in evaluate_panoptic_for_maskrcnn
    panoptic_results = panoptic_metric.evaluate(logger)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/tools/panoptic_deeplab/eval/panoptic.py", line 156, in evaluate
    results = cityscapes_eval.evaluatePanoptic(
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 364, in evaluatePanoptic
    pq_stat = pq_compute_multi_core(
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 253, in pq_compute_multi_core
    pq_stat = pq_compute_single_core(proc_id, annotation_set, gt_folder, pred_folder,
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 59, in wrapper
    raise e
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 55, in wrapper
    return f(*args, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/cityscapesscripts/evaluation/evalPanopticSemanticLabeling.py", line 182, in pq_compute_single_core
    pan_gt_pred = pan_gt.astype(np.uint64) * OFFSET + pan_pred.astype(np.uint64)
ValueError: operands could not be broadcast together with shapes (512,1024) (1024,2048) 
