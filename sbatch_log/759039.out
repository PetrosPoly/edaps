Running on node: biwirender08
In directory:    /scratch_net/biwidl202/ppolydorou/project_edaps/edaps
Starting on:     Thu Nov  9 11:43:59 CET 2023
SLURM_JOB_ID:    759039
CUDA_VISIBLE_DEVICES: 0
Thu Nov  9 11:43:59 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  On   | 00000000:88:00.0 Off |                  N/A |
| 22%   35C    P8    14W / 250W |      1MiB / 12212MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/utils/setup_env.py:38: UserWarning: Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/utils/setup_env.py:48: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
2023-11-09 11:44:23,547 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.5 (default, Sep  4 2020, 07:30:14) [GCC 7.3.0]
CUDA available: True
GPU 0: NVIDIA GeForce GTX TITAN X
CUDA_HOME: /usr
NVCC: Cuda compilation tools, release 11.2, V11.2.152
GCC: gcc (Debian 8.3.0-6) 8.3.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.8.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+c1d5d25
------------------------------------------------------------

2023-11-09 11:44:24,944 - mmdet - INFO - Distributed training: False
2023-11-09 11:44:26,407 - mmdet - INFO - Config:
checkpoint_config = dict(interval=100, by_epoch=False, max_keep_ckpts=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
num_instance_classes = 8
norm_cfg = dict(type='BN', requires_grad=True)
find_unused_parameters = True
maskrcnn_losses_weights = 1.0
model = dict(
    type='MaskRCNNPanoptic',
    pretrained='pretrained/mit_b5.pth',
    backbone=dict(type='mit_b5', style='pytorch'),
    use_neck_feat_for_decode_head=False,
    decode_head=dict(
        type='DAFormerHead',
        in_channels=[64, 128, 320, 512],
        in_index=[0, 1, 2, 3],
        channels=256,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        decoder_params=dict(
            embed_dims=256,
            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            fusion_cfg=dict(
                type='aspp',
                sep=True,
                dilations=(1, 6, 12, 18),
                pool=False,
                act_cfg=dict(type='ReLU'),
                norm_cfg=dict(type='BN', requires_grad=True))),
        loss_decode=dict(
            type='CrossEntropyLossMmseg', use_sigmoid=False, loss_weight=1.0)),
    neck=dict(
        type='FPN',
        in_channels=[64, 128, 320, 512],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=8,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False),
        work_dir=
        'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0'
    ),
    test_cfg=dict(
        mode='whole',
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CityscapesDataset'
data_root = 'data/cityscapes/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 512)
num_classes = 19
synthia_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadPanopticAnnotations'),
    dict(type='Resize', img_scale=(1280, 760)),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='GenPanopLabelsForMaskFormer',
        sigma=8,
        mode='train',
        num_classes=19,
        gen_instance_classids_from_zero=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(
        type='Collect',
        keys=[
            'img', 'gt_bboxes', 'gt_labels', 'gt_masks', 'gt_semantic_seg',
            'gt_panoptic_only_thing_classes', 'max_inst_per_class'
        ])
]
cityscapes_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', img_scale=(1024, 512)),
    dict(type='RandomCrop', crop_size=(512, 512)),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(type='Collect', keys=['img'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=4,
    train=dict(
        type='UDADataset',
        source=dict(
            type='SynthiaDataset',
            data_root='data/synthia/',
            img_dir='RGB',
            depth_dir='',
            ann_dir='panoptic-labels-crowdth-0-for-daformer/synthia_panoptic',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadPanopticAnnotations'),
                dict(type='Resize', img_scale=(1280, 760)),
                dict(
                    type='RandomCrop',
                    crop_size=(512, 512),
                    cat_max_ratio=0.75),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='GenPanopLabelsForMaskFormer',
                    sigma=8,
                    mode='train',
                    num_classes=19,
                    gen_instance_classids_from_zero=True),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(
                    type='Collect',
                    keys=[
                        'img', 'gt_bboxes', 'gt_labels', 'gt_masks',
                        'gt_semantic_seg', 'gt_panoptic_only_thing_classes',
                        'max_inst_per_class'
                    ])
            ]),
        target=dict(
            type='CityscapesDataset',
            data_root='data/cityscapes/',
            img_dir='leftImg8bit/train',
            depth_dir='',
            ann_dir='gtFine_panoptic/cityscapes_panoptic_train_trainId',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='Resize', img_scale=(1024, 512)),
                dict(type='RandomCrop', crop_size=(512, 512)),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(type='Collect', keys=['img'])
            ]),
        rare_class_sampling=dict(
            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),
    val=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
uda = dict(
    type='DACS',
    alpha=0.999,
    pseudo_threshold=0.968,
    pseudo_weight_ignore_top=15,
    pseudo_weight_ignore_bottom=120,
    imnet_feature_dist_lambda=0.005,
    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],
    imnet_feature_dist_scale_min_ratio=0.75,
    mix='class',
    blur=True,
    color_jitter_strength=0.2,
    color_jitter_probability=0.2,
    debug_img_interval=5000,
    print_grad_magnitude=False,
    share_src_backward=True,
    disable_mix_masks=False)
use_ddp_wrapper = True
optimizer = dict(
    type='AdamW',
    lr=6e-05,
    betas=(0.9, 0.999),
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            neck=dict(lr_mult=10.0),
            head=dict(lr_mult=10.0),
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = None
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
debug = False
n_gpus = 1
gpu_mtotal = 23000
total_train_time = '24:00:00'
n_cpus = 16
mem_per_cpu = 16000
machine = 'local'
only_eval = False
only_train = False
activate_auto_scale_lr = False
auto_scale_lr = dict(enable=False, base_batch_size=16)
print_layer_wise_lr = False
file_sys = 'Slurm'
launcher = None
generate_only_visuals_without_eval = False
dump_predictions_to_disk = False
evaluate_from_saved_png_predictions = False
panop_eval_temp_folder_previous = None
exp_sub = 'exp-00001'
exp_root = 'edaps_experiments'
seed = 0
evaluation = dict(
    interval=100,
    metric=['mIoU', 'mPQ', 'mAP'],
    eval_type='maskrcnn_panoptic',
    dataset_name='cityscapes',
    gt_dir='data/cityscapes/gtFine/val',
    gt_dir_panop='data/cityscapes/gtFine_panoptic',
    num_samples_debug=12,
    post_proccess_params=dict(
        num_classes=19,
        ignore_label=255,
        mapillary_dataloading_style='OURS',
        label_divisor=1000,
        train_id_to_eval_id=[
            7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31,
            32, 33, 0
        ],
        thing_list=[11, 12, 13, 14, 15, 16, 17, 18],
        mask_score_threshold=0.95,
        debug=False,
        dump_semantic_pred_as_numpy_array=False,
        load_semantic_pred_as_numpy_array=False,
        semantic_pred_numpy_array_location=None,
        use_semantic_decoder_for_instance_labeling=False,
        use_semantic_decoder_for_panoptic_labeling=False,
        nms_th=None,
        intersec_th=None,
        upsnet_mask_pruning=False,
        generate_thing_cls_panoptic_from_instance_pred=False),
    visuals_pan_eval=False,
    evalScale=None,
    evaluate_from_saved_numpy_predictions=False,
    evaluate_from_saved_png_predictions=False,
    panop_eval_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0/panoptic_eval',
    panop_eval_temp_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0/panoptic_eval/panop_eval_09-11-2023_11-44-23-431906',
    debug=False,
    out_dir=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0/panoptic_eval/panop_eval_09-11-2023_11-44-23-431906/visuals'
)
runner = dict(type='IterBasedRunner', max_iters=100)
name = '231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0'
exp = 1
name_dataset = 'synthia2cityscapes'
name_architecture = 'maskrcnn_mitb5'
name_encoder = 'mitb5'
name_decoder = 'maskrcnn'
name_uda = 'dacs_rcs0.01_cpl'
name_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_0k'
work_dir = 'edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0'
git_rev = 'c1d5d25ea698979b456582a2fa60a560d897cccc'
auto_resume = False
gpu_ids = [0]

2023-11-09 11:44:26,408 - mmdet - INFO - Set random seed to 0, deterministic: False
2023-11-09 11:44:26,408 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - BEFORE MODEL BUILD
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/detectors/two_stage.py:29: UserWarning: DeprecationWarning: pretrained is deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is deprecated, '
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/backbones/mix_transformer.py:215: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead')
2023-11-09 11:44:30,312 - mmdet - INFO - Load mit checkpoint.
2023-11-09 11:44:30,313 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 11:44:33,555 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 11:44:33,583 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 11:44:33,591 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 11:44:33,726 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 11:44:33,835 - mmdet - INFO - Load mit checkpoint.
2023-11-09 11:44:33,835 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 11:44:34,377 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 11:44:34,401 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 11:44:34,410 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 11:44:34,548 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 11:44:34,658 - mmdet - INFO - Load mit checkpoint.
2023-11-09 11:44:34,658 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-09 11:44:35,214 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-09 11:44:35,238 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-09 11:44:35,246 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-09 11:44:35,385 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-09 11:44:35,538 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - MODEL IS READY
2023-11-09 11:44:35,539 - mmseg - INFO - Loaded annotations from : data/synthia/panoptic-labels-crowdth-0-for-daformer/synthia_panoptic.json
2023-11-09 11:44:45,014 - mmseg - INFO - Loaded 9400 images from data/synthia/RGB
2023-11-09 11:44:45,018 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic/cityscapes_panoptic_train_trainId.json
2023-11-09 11:44:45,461 - mmseg - INFO - Loaded 2975 images from data/cityscapes/leftImg8bit/train
2023-11-09 11:44:45,552 - mmseg - INFO - RCS Classes: [6, 7, 17, 18, 4, 3, 12, 5, 15, 13, 11, 10, 8, 0, 1, 2]
2023-11-09 11:44:45,553 - mmseg - INFO - RCS ClassProb: [1.55649453e-01 1.45927146e-01 1.30805254e-01 1.29144296e-01
 1.22819245e-01 1.22646019e-01 9.97279957e-02 5.53424992e-02
 3.33626680e-02 2.43163528e-03 2.00466975e-03 1.35448776e-04
 3.78220921e-06 8.31826052e-10 3.41141226e-10 1.11511794e-14]
2023-11-09 11:44:56,503 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-11-09 11:45:06,895 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic/cityscapes_panoptic_val.json
2023-11-09 11:45:06,979 - mmseg - INFO - Loaded 500 images from data/cityscapes/leftImg8bit/val
2023-11-09 11:45:06,980 - mmdet - INFO - Start running, host: ppolydorou@biwirender08, work_dir: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0
2023-11-09 11:45:06,980 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
 -------------------- 
after_train_iter:
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-09 11:45:06,980 - mmdet - INFO - workflow: [('train', 1)], max: 100 iters
2023-11-09 11:45:06,981 - mmdet - INFO - Checkpoints will be saved to /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0 by HardDiskBackend.
2023-11-09 11:45:06,981 - mmdet - INFO - The best checkpoint will be saved to edaps_experiments/exp-00001/work_dirs/local-exp00001/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0/panoptic_eval/panop_eval_09-11-2023_11-44-23-431906/visuals/231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0 by HardDiskBackend
_base_/default_runtime_mmdet_mr.py
_base_/models/maskrcnn_sepaspp_mitb5.py
_base_/datasets/uda_synthia_to_cityscapes_maskrcnn_panoptic.py
_base_/uda/dacs_a999_fdthings.py
_base_/schedules/adamw.py
_base_/schedules/poly10warm.py
Run job 231109_1144_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_01ae0
2023-11-09 11:50:51,846 - mmdet - INFO - Iter [50/100]	lr: 9.996e-07, eta: 0:05:42, time: 6.852, data_time: 0.124, memory: 9322, decode.loss_seg: 2.7823, decode.acc_seg: 8.6275, rpn.loss_rpn_cls: 0.6868, rpn.loss_rpn_bbox: 0.3243, roi.loss_cls: 1.4643, roi.acc: 56.0762, roi.loss_bbox: 0.1112, roi.loss_mask: 1.9376, src.loss_imnet_feat_dist: 0.0656, mix.decode.loss_seg: 1.4890, mix.decode.acc_seg: 13.6418
2023-11-09 11:56:33,626 - mmdet - INFO - Saving checkpoint at 100 iterations
2023-11-09 11:57:00,881 - mmdet - INFO - Iter [100/100]	lr: 3.960e-08, eta: 0:00:00, time: 7.381, data_time: 0.016, memory: 9328, decode.loss_seg: 2.6970, decode.acc_seg: 24.6149, rpn.loss_rpn_cls: 0.6701, rpn.loss_rpn_bbox: 0.2952, roi.loss_cls: 0.6398, roi.acc: 84.8477, roi.loss_bbox: 0.1922, roi.loss_mask: 1.2062, src.loss_imnet_feat_dist: 0.0705, mix.decode.loss_seg: 1.5081, mix.decode.acc_seg: 22.6258
[                                                  ] 0/500, elapsed: 0s, ETA:[                                 ] 1/500, 0.3 task/s, elapsed: 4s, ETA:  1817s[                                 ] 2/500, 0.3 task/s, elapsed: 6s, ETA:  1471s[                                 ] 3/500, 0.4 task/s, elapsed: 8s, ETA:  1365s[                                ] 4/500, 0.4 task/s, elapsed: 11s, ETA:  1328s[                                ] 5/500, 0.4 task/s, elapsed: 13s, ETA:  1306s[                                ] 6/500, 0.4 task/s, elapsed: 16s, ETA:  1292s[                                ] 7/500, 0.4 task/s, elapsed: 18s, ETA:  1281s[                                ] 8/500, 0.4 task/s, elapsed: 21s, ETA:  1273s[                                ] 9/500, 0.4 task/s, elapsed: 23s, ETA:  1266s[                               ] 10/500, 0.4 task/s, elapsed: 26s, ETA:  1260s[                               ] 11/500, 0.4 task/s, elapsed: 28s, ETA:  1255s[                               ] 12/500, 0.4 task/s, elapsed: 31s, ETA:  1250s[                               ] 13/500, 0.4 task/s, elapsed: 33s, ETA:  1245s[                               ] 14/500, 0.4 task/s, elapsed: 36s, ETA:  1241s[                               ] 15/500, 0.4 task/s, elapsed: 38s, ETA:  1237s[                               ] 16/500, 0.4 task/s, elapsed: 41s, ETA:  1233s[>                              ] 17/500, 0.4 task/s, elapsed: 43s, ETA:  1229s[>                              ] 18/500, 0.4 task/s, elapsed: 46s, ETA:  1226s[>                              ] 19/500, 0.4 task/s, elapsed: 48s, ETA:  1222s[>                              ] 20/500, 0.4 task/s, elapsed: 51s, ETA:  1219s[>                              ] 21/500, 0.4 task/s, elapsed: 53s, ETA:  1216s[>                              ] 22/500, 0.4 task/s, elapsed: 56s, ETA:  1212s[>                              ] 23/500, 0.4 task/s, elapsed: 58s, ETA:  1209s[>                              ] 24/500, 0.4 task/s, elapsed: 61s, ETA:  1206s[>                              ] 25/500, 0.4 task/s, elapsed: 63s, ETA:  1203s[>                              ] 26/500, 0.4 task/s, elapsed: 66s, ETA:  1200s[>                              ] 27/500, 0.4 task/s, elapsed: 68s, ETA:  1197s[>                              ] 28/500, 0.4 task/s, elapsed: 71s, ETA:  1194s[>                              ] 29/500, 0.4 task/s, elapsed: 73s, ETA:  1191s[>                              ] 30/500, 0.4 task/s, elapsed: 76s, ETA:  1189s[>                              ] 31/500, 0.4 task/s, elapsed: 78s, ETA:  1186s[>                              ] 32/500, 0.4 task/s, elapsed: 81s, ETA:  1183s[>>                             ] 33/500, 0.4 task/s, elapsed: 83s, ETA:  1180s[>>                             ] 34/500, 0.4 task/s, elapsed: 86s, ETA:  1178s[>>                             ] 35/500, 0.4 task/s, elapsed: 88s, ETA:  1175s[>>                             ] 36/500, 0.4 task/s, elapsed: 91s, ETA:  1172s[>>                             ] 37/500, 0.4 task/s, elapsed: 93s, ETA:  1169s[>>                             ] 38/500, 0.4 task/s, elapsed: 96s, ETA:  1166s[>>                             ] 39/500, 0.4 task/s, elapsed: 98s, ETA:  1164s[>>                            ] 40/500, 0.4 task/s, elapsed: 101s, ETA:  1161s[>>                            ] 41/500, 0.4 task/s, elapsed: 103s, ETA:  1158s[>>                            ] 42/500, 0.4 task/s, elapsed: 106s, ETA:  1156s[>>                            ] 43/500, 0.4 task/s, elapsed: 108s, ETA:  1153s[>>                            ] 44/500, 0.4 task/s, elapsed: 111s, ETA:  1150s[>>                            ] 45/500, 0.4 task/s, elapsed: 113s, ETA:  1148s[>>                            ] 46/500, 0.4 task/s, elapsed: 116s, ETA:  1145s[>>                            ] 47/500, 0.4 task/s, elapsed: 119s, ETA:  1142s[>>                            ] 48/500, 0.4 task/s, elapsed: 121s, ETA:  1140s[>>                            ] 49/500, 0.4 task/s, elapsed: 124s, ETA:  1137s[>>>                           ] 50/500, 0.4 task/s, elapsed: 126s, ETA:  1134s[>>>                           ] 51/500, 0.4 task/s, elapsed: 129s, ETA:  1132s[>>>                           ] 52/500, 0.4 task/s, elapsed: 131s, ETA:  1129s[>>>                           ] 53/500, 0.4 task/s, elapsed: 134s, ETA:  1127s[>>>                           ] 54/500, 0.4 task/s, elapsed: 136s, ETA:  1124s[>>>                           ] 55/500, 0.4 task/s, elapsed: 139s, ETA:  1121s[>>>                           ] 56/500, 0.4 task/s, elapsed: 141s, ETA:  1119s[>>>                           ] 57/500, 0.4 task/s, elapsed: 144s, ETA:  1116s[>>>                           ] 58/500, 0.4 task/s, elapsed: 146s, ETA:  1114s[>>>                           ] 59/500, 0.4 task/s, elapsed: 149s, ETA:  1111s[>>>                           ] 60/500, 0.4 task/s, elapsed: 151s, ETA:  1108s[>>>                           ] 61/500, 0.4 task/s, elapsed: 154s, ETA:  1106s[>>>                           ] 62/500, 0.4 task/s, elapsed: 156s, ETA:  1103s[>>>                           ] 63/500, 0.4 task/s, elapsed: 159s, ETA:  1101s[>>>                           ] 64/500, 0.4 task/s, elapsed: 161s, ETA:  1098s[>>>                           ] 65/500, 0.4 task/s, elapsed: 164s, ETA:  1095s[>>>                           ] 66/500, 0.4 task/s, elapsed: 166s, ETA:  1093s[>>>>                          ] 67/500, 0.4 task/s, elapsed: 169s, ETA:  1090s[>>>>                          ] 68/500, 0.4 task/s, elapsed: 171s, ETA:  1088s[>>>>                          ] 69/500, 0.4 task/s, elapsed: 174s, ETA:  1085s[>>>>                          ] 70/500, 0.4 task/s, elapsed: 176s, ETA:  1082s[>>>>                          ] 71/500, 0.4 task/s, elapsed: 179s, ETA:  1080s[>>>>                          ] 72/500, 0.4 task/s, elapsed: 181s, ETA:  1077s[>>>>                          ] 73/500, 0.4 task/s, elapsed: 184s, ETA:  1075s[>>>>                          ] 74/500, 0.4 task/s, elapsed: 186s, ETA:  1072s[>>>>                          ] 75/500, 0.4 task/s, elapsed: 189s, ETA:  1070s[>>>>                          ] 76/500, 0.4 task/s, elapsed: 191s, ETA:  1067s[>>>>                          ] 77/500, 0.4 task/s, elapsed: 194s, ETA:  1065s[>>>>                          ] 78/500, 0.4 task/s, elapsed: 196s, ETA:  1062s[>>>>                          ] 79/500, 0.4 task/s, elapsed: 199s, ETA:  1060s[>>>>                          ] 80/500, 0.4 task/s, elapsed: 201s, ETA:  1057s[>>>>                          ] 81/500, 0.4 task/s, elapsed: 204s, ETA:  1054s[>>>>                          ] 82/500, 0.4 task/s, elapsed: 206s, ETA:  1052s[>>>>                          ] 83/500, 0.4 task/s, elapsed: 209s, ETA:  1049s[>>>>>                         ] 84/500, 0.4 task/s, elapsed: 211s, ETA:  1047s[>>>>>                         ] 85/500, 0.4 task/s, elapsed: 214s, ETA:  1044s[>>>>>                         ] 86/500, 0.4 task/s, elapsed: 216s, ETA:  1042s[>>>>>                         ] 87/500, 0.4 task/s, elapsed: 219s, ETA:  1039s[>>>>>                         ] 88/500, 0.4 task/s, elapsed: 221s, ETA:  1037s[>>>>>                         ] 89/500, 0.4 task/s, elapsed: 224s, ETA:  1034s[>>>>>                         ] 90/500, 0.4 task/s, elapsed: 226s, ETA:  1031s[>>>>>                         ] 91/500, 0.4 task/s, elapsed: 229s, ETA:  1029s[>>>>>                         ] 92/500, 0.4 task/s, elapsed: 231s, ETA:  1026s[>>>>>                         ] 93/500, 0.4 task/s, elapsed: 234s, ETA:  1024s[>>>>>                         ] 94/500, 0.4 task/s, elapsed: 236s, ETA:  1021s[>>>>>                         ] 95/500, 0.4 task/s, elapsed: 239s, ETA:  1019s[>>>>>                         ] 96/500, 0.4 task/s, elapsed: 241s, ETA:  1016s[>>>>>                         ] 97/500, 0.4 task/s, elapsed: 244s, ETA:  1014s[>>>>>                         ] 98/500, 0.4 task/s, elapsed: 247s, ETA:  1011s[>>>>>                         ] 99/500, 0.4 task/s, elapsed: 249s, ETA:  1009s[>>>>>                        ] 100/500, 0.4 task/s, elapsed: 252s, ETA:  1006s[>>>>>                        ] 101/500, 0.4 task/s, elapsed: 254s, ETA:  1004s[>>>>>                        ] 102/500, 0.4 task/s, elapsed: 257s, ETA:  1001s[>>>>>                        ] 103/500, 0.4 task/s, elapsed: 259s, ETA:   999s[>>>>>>                       ] 104/500, 0.4 task/s, elapsed: 262s, ETA:   996s[>>>>>>                       ] 105/500, 0.4 task/s, elapsed: 264s, ETA:   993s[>>>>>>                       ] 106/500, 0.4 task/s, elapsed: 267s, ETA:   991s[>>>>>>                       ] 107/500, 0.4 task/s, elapsed: 269s, ETA:   988s[>>>>>>                       ] 108/500, 0.4 task/s, elapsed: 272s, ETA:   986s[>>>>>>                       ] 109/500, 0.4 task/s, elapsed: 274s, ETA:   983s[>>>>>>                       ] 110/500, 0.4 task/s, elapsed: 277s, ETA:   981s[>>>>>>                       ] 111/500, 0.4 task/s, elapsed: 280s, ETA:   982s[>>>>>>                       ] 112/500, 0.4 task/s, elapsed: 285s, ETA:   987s[>>>>>>                       ] 113/500, 0.4 task/s, elapsed: 290s, ETA:   992s[>>>>>>                       ] 114/500, 0.4 task/s, elapsed: 296s, ETA:  1004s[>>>>>>                       ] 115/500, 0.4 task/s, elapsed: 319s, ETA:  1067s[>>>>>>                       ] 116/500, 0.3 task/s, elapsed: 334s, ETA:  1106s[>>>>>>                       ] 117/500, 0.3 task/s, elapsed: 349s, ETA:  1143s[>>>>>>                       ] 118/500, 0.3 task/s, elapsed: 367s, ETA:  1188s[>>>>>>                       ] 119/500, 0.3 task/s, elapsed: 384s, ETA:  1229s[>>>>>>                       ] 120/500, 0.3 task/s, elapsed: 401s, ETA:  1268s[>>>>>>>                      ] 121/500, 0.3 task/s, elapsed: 418s, ETA:  1308s[>>>>>>>                      ] 122/500, 0.3 task/s, elapsed: 438s, ETA:  1358s[>>>>>>>                      ] 123/500, 0.3 task/s, elapsed: 455s, ETA:  1396s[>>>>>>>                      ] 124/500, 0.3 task/s, elapsed: 475s, ETA:  1440s[>>>>>>>                      ] 125/500, 0.3 task/s, elapsed: 495s, ETA:  1484s[>>>>>>>                      ] 126/500, 0.2 task/s, elapsed: 510s, ETA:  1513s[>>>>>>>                      ] 127/500, 0.2 task/s, elapsed: 529s, ETA:  1554s[>>>>>>>                      ] 128/500, 0.2 task/s, elapsed: 544s, ETA:  1580s[>>>>>>>                      ] 129/500, 0.2 task/s, elapsed: 561s, ETA:  1614s[>>>>>>>                      ] 130/500, 0.2 task/s, elapsed: 578s, ETA:  1645s[>>>>>>>                      ] 131/500, 0.2 task/s, elapsed: 594s, ETA:  1673s[>>>>>>>                      ] 132/500, 0.2 task/s, elapsed: 612s, ETA:  1707s[>>>>>>>                      ] 133/500, 0.2 task/s, elapsed: 624s, ETA:  1722s[>>>>>>>                      ] 134/500, 0.2 task/s, elapsed: 637s, ETA:  1741s[>>>>>>>                      ] 135/500, 0.2 task/s, elapsed: 659s, ETA:  1781s[>>>>>>>                      ] 136/500, 0.2 task/s, elapsed: 675s, ETA:  1806s[>>>>>>>                      ] 137/500, 0.2 task/s, elapsed: 691s, ETA:  1831s[>>>>>>>>                     ] 138/500, 0.2 task/s, elapsed: 708s, ETA:  1858s[>>>>>>>>                     ] 139/500, 0.2 task/s, elapsed: 722s, ETA:  1876s[>>>>>>>>                     ] 140/500, 0.2 task/s, elapsed: 737s, ETA:  1896s[>>>>>>>>                     ] 141/500, 0.2 task/s, elapsed: 754s, ETA:  1919s[>>>>>>>>                     ] 142/500, 0.2 task/s, elapsed: 773s, ETA:  1948s[>>>>>>>>                     ] 143/500, 0.2 task/s, elapsed: 795s, ETA:  1985s[>>>>>>>>                     ] 144/500, 0.2 task/s, elapsed: 814s, ETA:  2013s[>>>>>>>>                     ] 145/500, 0.2 task/s, elapsed: 830s, ETA:  2032s[>>>>>>>>                     ] 146/500, 0.2 task/s, elapsed: 844s, ETA:  2047s[>>>>>>>>                     ] 147/500, 0.2 task/s, elapsed: 863s, ETA:  2072s[>>>>>>>>                     ] 148/500, 0.2 task/s, elapsed: 877s, ETA:  2086s[>>>>>>>>                     ] 149/500, 0.2 task/s, elapsed: 893s, ETA:  2103s[>>>>>>>>                     ] 150/500, 0.2 task/s, elapsed: 909s, ETA:  2120s[>>>>>>>>                     ] 151/500, 0.2 task/s, elapsed: 924s, ETA:  2135s[>>>>>>>>                     ] 152/500, 0.2 task/s, elapsed: 939s, ETA:  2149s[>>>>>>>>                     ] 153/500, 0.2 task/s, elapsed: 956s, ETA:  2168s[>>>>>>>>                     ] 154/500, 0.2 task/s, elapsed: 974s, ETA:  2189s[>>>>>>>>                     ] 155/500, 0.2 task/s, elapsed: 992s, ETA:  2208s[>>>>>>>>                    ] 156/500, 0.2 task/s, elapsed: 1006s, ETA:  2219s[>>>>>>>>                    ] 157/500, 0.2 task/s, elapsed: 1022s, ETA:  2233s[>>>>>>>>                    ] 158/500, 0.2 task/s, elapsed: 1035s, ETA:  2241s[>>>>>>>>                    ] 159/500, 0.2 task/s, elapsed: 1054s, ETA:  2260s[>>>>>>>>                    ] 160/500, 0.1 task/s, elapsed: 1080s, ETA:  2296s[>>>>>>>>>                   ] 161/500, 0.1 task/s, elapsed: 1096s, ETA:  2307s[>>>>>>>>>                   ] 162/500, 0.1 task/s, elapsed: 1117s, ETA:  2330s[>>>>>>>>>                   ] 163/500, 0.1 task/s, elapsed: 1137s, ETA:  2352s[>>>>>>>>>                   ] 164/500, 0.1 task/s, elapsed: 1155s, ETA:  2366s[>>>>>>>>>                   ] 165/500, 0.1 task/s, elapsed: 1170s, ETA:  2375s[>>>>>>>>>                   ] 166/500, 0.1 task/s, elapsed: 1187s, ETA:  2389s[>>>>>>>>>                   ] 167/500, 0.1 task/s, elapsed: 1205s, ETA:  2403s[>>>>>>>>>                   ] 168/500, 0.1 task/s, elapsed: 1227s, ETA:  2426s[>>>>>>>>>                   ] 169/500, 0.1 task/s, elapsed: 1249s, ETA:  2447s[>>>>>>>>>                   ] 170/500, 0.1 task/s, elapsed: 1269s, ETA:  2464s[>>>>>>>>>                   ] 171/500, 0.1 task/s, elapsed: 1290s, ETA:  2482s[>>>>>>>>>                   ] 172/500, 0.1 task/s, elapsed: 1311s, ETA:  2499s[>>>>>>>>>                   ] 173/500, 0.1 task/s, elapsed: 1335s, ETA:  2524s[>>>>>>>>>                   ] 174/500, 0.1 task/s, elapsed: 1353s, ETA:  2534s[>>>>>>>>>                   ] 175/500, 0.1 task/s, elapsed: 1369s, ETA:  2543s[>>>>>>>>>                   ] 176/500, 0.1 task/s, elapsed: 1383s, ETA:  2547s[>>>>>>>>>                   ] 177/500, 0.1 task/s, elapsed: 1407s, ETA:  2567s[>>>>>>>>>                   ] 178/500, 0.1 task/s, elapsed: 1430s, ETA:  2586s[>>>>>>>>>>                  ] 179/500, 0.1 task/s, elapsed: 1446s, ETA:  2593s[>>>>>>>>>>                  ] 180/500, 0.1 task/s, elapsed: 1464s, ETA:  2603s[>>>>>>>>>>                  ] 181/500, 0.1 task/s, elapsed: 1483s, ETA:  2613s[>>>>>>>>>>                  ] 182/500, 0.1 task/s, elapsed: 1495s, ETA:  2613s[>>>>>>>>>>                  ] 183/500, 0.1 task/s, elapsed: 1514s, ETA:  2622s[>>>>>>>>>>                  ] 184/500, 0.1 task/s, elapsed: 1532s, ETA:  2632s[>>>>>>>>>>                  ] 185/500, 0.1 task/s, elapsed: 1546s, ETA:  2632s[>>>>>>>>>>                  ] 186/500, 0.1 task/s, elapsed: 1565s, ETA:  2643s[>>>>>>>>>>                  ] 187/500, 0.1 task/s, elapsed: 1581s, ETA:  2647s[>>>>>>>>>>                  ] 188/500, 0.1 task/s, elapsed: 1595s, ETA:  2648s[>>>>>>>>>>                  ] 189/500, 0.1 task/s, elapsed: 1605s, ETA:  2640s[>>>>>>>>>>                  ] 190/500, 0.1 task/s, elapsed: 1628s, ETA:  2656s[>>>>>>>>>>                  ] 191/500, 0.1 task/s, elapsed: 1646s, ETA:  2662s[>>>>>>>>>>                  ] 192/500, 0.1 task/s, elapsed: 1669s, ETA:  2677s[>>>>>>>>>>                  ] 193/500, 0.1 task/s, elapsed: 1700s, ETA:  2703s[>>>>>>>>>>                  ] 194/500, 0.1 task/s, elapsed: 1717s, ETA:  2709s[>>>>>>>>>>                  ] 195/500, 0.1 task/s, elapsed: 1731s, ETA:  2708s[>>>>>>>>>>                  ] 196/500, 0.1 task/s, elapsed: 1750s, ETA:  2714s[>>>>>>>>>>>                 ] 197/500, 0.1 task/s, elapsed: 1770s, ETA:  2722s[>>>>>>>>>>>                 ] 198/500, 0.1 task/s, elapsed: 1794s, ETA:  2736s[>>>>>>>>>>>                 ] 199/500, 0.1 task/s, elapsed: 1821s, ETA:  2754s[>>>>>>>>>>>                 ] 200/500, 0.1 task/s, elapsed: 1839s, ETA:  2758s[>>>>>>>>>>>                 ] 201/500, 0.1 task/s, elapsed: 1870s, ETA:  2782sTraceback (most recent call last):
  File "run_experiments.py", line 126, in <module>
    train_mmdet.main([config_files[i]])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/tools/train_mmdet.py", line 127, in main
    train_detector(model, datasets, cfg, distributed=distributed, validate=(not cfg.only_train), timestamp=timestamp,  meta=meta,)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/apis/train.py", line 211, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 144, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 70, in train
    self.call_hook('after_train_iter')
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/base_runner.py", line 317, in call_hook
    getattr(hook, fn_name)(self)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/hooks/evaluation.py", line 266, in after_train_iter
    self._do_evaluate(runner)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/core/evaluation/eval_hooks.py", line 63, in _do_evaluate
    results = single_gpu_test_uda(runner.model, self.dataloader, show=False, out_dir=self.out_dir, debug=self.debug, dataset_name=self.dataset_name)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/apis/test.py", line 179, in single_gpu_test_uda
    result = model(return_loss=False, rescale=rescale, **data)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/parallel/data_parallel.py", line 51, in forward
    return super().forward(*inputs, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    if t.device != self.src_device_obj:
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 8294) is killed by signal: Killed. 
slurmstepd: error: Detected 1 oom-kill event(s) in StepId=759039.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.
