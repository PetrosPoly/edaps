Running on node: biwirender10
In directory: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps
Starting on: Wed Nov 22 23:35:01 CET 2023
Number of CPUs available: 5
SLURM_JOB_ID: 765897
CUDA_VISIBLE_DEVICES: 0
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/utils/setup_env.py:48: UserWarning: Setting MKL_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed.
  warnings.warn(
2023-11-22 23:35:08,564 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.5 (default, Sep  4 2020, 07:30:14) [GCC 7.3.0]
CUDA available: True
GPU 0: NVIDIA GeForce GTX TITAN X
CUDA_HOME: /usr
NVCC: Cuda compilation tools, release 11.2, V11.2.152
GCC: gcc (Debian 8.3.0-6) 8.3.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.8.0
MMCV: 1.6.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.25.1+2c587c2
------------------------------------------------------------

2023-11-22 23:35:10,342 - mmdet - INFO - Distributed training: False
2023-11-22 23:35:12,078 - mmdet - INFO - Config:
checkpoint_config = dict(interval=5000, by_epoch=False, max_keep_ckpts=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
num_instance_classes = 8
norm_cfg = dict(type='BN', requires_grad=True)
find_unused_parameters = True
maskrcnn_losses_weights = 1.0
model = dict(
    type='MaskRCNNPanoptic',
    pretrained='pretrained/mit_b5.pth',
    backbone=dict(type='mit_b5', style='pytorch'),
    use_neck_feat_for_decode_head=False,
    decode_head=dict(
        type='DAFormerHead',
        in_channels=[64, 128, 320, 512],
        in_index=[0, 1, 2, 3],
        channels=256,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        decoder_params=dict(
            embed_dims=256,
            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),
            fusion_cfg=dict(
                type='aspp',
                sep=True,
                dilations=(1, 6, 12, 18),
                pool=False,
                act_cfg=dict(type='ReLU'),
                norm_cfg=dict(type='BN', requires_grad=True))),
        loss_decode=dict(
            type='CrossEntropyLossMmseg', use_sigmoid=False, loss_weight=1.0)),
    neck=dict(
        type='FPN',
        in_channels=[64, 128, 320, 512],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=8,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=8,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False),
        work_dir=
        'edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483'
    ),
    test_cfg=dict(
        mode='whole',
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CityscapesDataset'
data_root = 'data/cityscapes/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (256, 256)
num_classes = 19
synthia_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadPanopticAnnotations'),
    dict(type='Resize', img_scale=(1280, 760)),
    dict(type='RandomCrop', crop_size=(256, 256), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='GenPanopLabelsForMaskFormer',
        sigma=8,
        mode='train',
        num_classes=19,
        gen_instance_classids_from_zero=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(
        type='Collect',
        keys=[
            'img', 'gt_bboxes', 'gt_labels', 'gt_masks', 'gt_semantic_seg',
            'gt_panoptic_only_thing_classes', 'max_inst_per_class',
            'panoptic_labels_list', 'unique_labels_list', 'indices_list'
        ])
]
cityscapes_train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', img_scale=(1024, 512)),
    dict(type='RandomCrop', crop_size=(256, 256)),
    dict(type='RandomFlip', prob=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundleMmdet'),
    dict(type='Collect', keys=['img'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='UDADataset',
        source=dict(
            type='SynthiaDataset',
            data_root='data/synthia/',
            img_dir='RGB',
            depth_dir='',
            ann_dir='panoptic-labels-crowdth-0-for-daformer/synthia_panoptic',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='LoadPanopticAnnotations'),
                dict(type='Resize', img_scale=(1280, 760)),
                dict(
                    type='RandomCrop',
                    crop_size=(256, 256),
                    cat_max_ratio=0.75),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='GenPanopLabelsForMaskFormer',
                    sigma=8,
                    mode='train',
                    num_classes=19,
                    gen_instance_classids_from_zero=True),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(
                    type='Collect',
                    keys=[
                        'img', 'gt_bboxes', 'gt_labels', 'gt_masks',
                        'gt_semantic_seg', 'gt_panoptic_only_thing_classes',
                        'max_inst_per_class', 'panoptic_labels_list',
                        'unique_labels_list', 'indices_list'
                    ])
            ]),
        target=dict(
            type='CityscapesDataset',
            data_root='data/cityscapes/',
            img_dir='leftImg8bit/train',
            depth_dir='',
            ann_dir='gtFine_panoptic/cityscapes_panoptic_train_trainId',
            pipeline=[
                dict(type='LoadImageFromFile'),
                dict(type='Resize', img_scale=(1024, 512)),
                dict(type='RandomCrop', crop_size=(256, 256)),
                dict(type='RandomFlip', prob=0.5),
                dict(
                    type='Normalize',
                    mean=[123.675, 116.28, 103.53],
                    std=[58.395, 57.12, 57.375],
                    to_rgb=True),
                dict(type='DefaultFormatBundleMmdet'),
                dict(type='Collect', keys=['img'])
            ]),
        rare_class_sampling=dict(
            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),
    val=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        img_dir='leftImg8bit/val',
        depth_dir='',
        ann_dir='gtFine_panoptic/cityscapes_panoptic_val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
uda = dict(
    type='DACS',
    alpha=0.999,
    pseudo_threshold=0.968,
    pseudo_weight_ignore_top=15,
    pseudo_weight_ignore_bottom=120,
    imnet_feature_dist_lambda=0.005,
    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],
    imnet_feature_dist_scale_min_ratio=0.75,
    mix='class',
    blur=True,
    color_jitter_strength=0.2,
    color_jitter_probability=0.2,
    debug_img_interval=5000,
    print_grad_magnitude=False,
    share_src_backward=True,
    disable_mix_masks=False)
use_ddp_wrapper = True
optimizer = dict(
    type='AdamW',
    lr=6e-05,
    betas=(0.9, 0.999),
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            neck=dict(lr_mult=10.0),
            head=dict(lr_mult=10.0),
            pos_block=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = None
lr_config = dict(
    policy='poly',
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06,
    power=1.0,
    min_lr=0.0,
    by_epoch=False)
debug = False
n_gpus = 1
gpu_mtotal = 23000
total_train_time = '24:00:00'
n_cpus = 16
mem_per_cpu = 16000
machine = 'local'
only_eval = False
only_train = False
activate_auto_scale_lr = False
auto_scale_lr = dict(enable=False, base_batch_size=16)
print_layer_wise_lr = False
file_sys = 'Slurm'
launcher = None
generate_only_visuals_without_eval = False
dump_predictions_to_disk = False
evaluate_from_saved_png_predictions = False
panop_eval_temp_folder_previous = None
exp_sub = 'exp-00001'
exp_root = 'edaps_experiments'
seed = 0
evaluation = dict(
    interval=20000,
    metric=['mIoU'],
    eval_type='maskrcnn_panoptic',
    dataset_name='cityscapes',
    gt_dir='data/cityscapes/gtFine/val',
    gt_dir_panop='data/cityscapes/gtFine_panoptic',
    num_samples_debug=12,
    post_proccess_params=dict(
        num_classes=19,
        ignore_label=255,
        mapillary_dataloading_style='OURS',
        label_divisor=1000,
        train_id_to_eval_id=[
            7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31,
            32, 33, 0
        ],
        thing_list=[11, 12, 13, 14, 15, 16, 17, 18],
        mask_score_threshold=0.95,
        debug=False,
        dump_semantic_pred_as_numpy_array=False,
        load_semantic_pred_as_numpy_array=False,
        semantic_pred_numpy_array_location=None,
        use_semantic_decoder_for_instance_labeling=False,
        use_semantic_decoder_for_panoptic_labeling=False,
        nms_th=None,
        intersec_th=None,
        upsnet_mask_pruning=False,
        generate_thing_cls_panoptic_from_instance_pred=False),
    visuals_pan_eval=False,
    evalScale=None,
    evaluate_from_saved_numpy_predictions=False,
    evaluate_from_saved_png_predictions=False,
    panop_eval_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483/panoptic_eval',
    panop_eval_temp_folder=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483/panoptic_eval/panop_eval_22-11-2023_23-35-08-444390',
    debug=False,
    out_dir=
    'edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483/panoptic_eval/panop_eval_22-11-2023_23-35-08-444390/visuals'
)
runner = dict(type='IterBasedRunner', max_iters=20000)
name = '231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483'
exp = 1
name_dataset = 'synthia2cityscapes'
name_architecture = 'maskrcnn_mitb5'
name_encoder = 'mitb5'
name_decoder = 'maskrcnn'
name_uda = 'dacs_rcs0.01_cpl'
name_opt = 'adamw_6e-05_pmTrue_poly10warm_1x1_20k'
work_dir = 'edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483'
git_rev = '2c587c29bba09690a0205ef036db73b64651ab5c'
auto_resume = False
gpu_ids = [0]

2023-11-22 23:35:12,079 - mmdet - INFO - Set random seed to 0, deterministic: False
2023-11-22 23:35:12,079 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - BEFORE MODEL BUILD
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/detectors/two_stage.py:29: UserWarning: DeprecationWarning: pretrained is deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is deprecated, '
/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/backbones/mix_transformer.py:215: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead')
2023-11-22 23:35:16,303 - mmdet - INFO - Load mit checkpoint.
2023-11-22 23:35:16,304 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-22 23:35:16,804 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-22 23:35:16,832 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-22 23:35:16,841 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-22 23:35:16,983 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-22 23:35:17,057 - mmdet - INFO - Load mit checkpoint.
2023-11-22 23:35:17,057 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-22 23:35:17,470 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-22 23:35:17,494 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-22 23:35:17,502 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-22 23:35:17,643 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-22 23:35:17,715 - mmdet - INFO - Load mit checkpoint.
2023-11-22 23:35:17,715 - mmdet - INFO - load checkpoint from local path: pretrained/mit_b5.pth
2023-11-22 23:35:18,238 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-22 23:35:18,262 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-22 23:35:18,270 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-11-22 23:35:18,410 - mmdet - INFO - initialize DAFormerHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
2023-11-22 23:35:18,528 - mmdet - INFO - DEBUG - PETROS 14-08-2023 - MODEL IS READY
2023-11-22 23:35:18,529 - mmseg - INFO - Loaded annotations from : data/synthia/panoptic-labels-crowdth-0-for-daformer/synthia_panoptic.json
2023-11-22 23:35:24,573 - mmseg - INFO - Loaded 9400 images from data/synthia/RGB
2023-11-22 23:35:24,578 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic/cityscapes_panoptic_train_trainId.json
2023-11-22 23:35:24,825 - mmseg - INFO - Loaded 2975 images from data/cityscapes/leftImg8bit/train
2023-11-22 23:35:24,901 - mmseg - INFO - RCS Classes: [6, 7, 17, 18, 4, 3, 12, 5, 15, 13, 11, 10, 8, 0, 1, 2]
2023-11-22 23:35:24,902 - mmseg - INFO - RCS ClassProb: [1.55649453e-01 1.45927146e-01 1.30805254e-01 1.29144296e-01
 1.22819245e-01 1.22646019e-01 9.97279957e-02 5.53424992e-02
 3.33626680e-02 2.43163528e-03 2.00466975e-03 1.35448776e-04
 3.78220921e-06 8.31826052e-10 3.41141226e-10 1.11511794e-14]
2023-11-22 23:35:27,376 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-11-22 23:35:39,659 - mmseg - INFO - Loaded annotations from : data/cityscapes/gtFine_panoptic/cityscapes_panoptic_val.json
2023-11-22 23:35:39,674 - mmseg - INFO - Loaded 150 images from data/cityscapes/leftImg8bit/val
2023-11-22 23:35:39,675 - mmdet - INFO - Start running, host: ppolydorou@biwirender10, work_dir: /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483
2023-11-22 23:35:39,675 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
 -------------------- 
after_train_iter:
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHookUDA                        
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-22 23:35:39,676 - mmdet - INFO - workflow: [('train', 1)], max: 20000 iters
2023-11-22 23:35:39,676 - mmdet - INFO - Checkpoints will be saved to /scratch_net/biwidl202/ppolydorou/project_edaps/edaps/edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483 by HardDiskBackend.
2023-11-22 23:35:39,677 - mmdet - INFO - The best checkpoint will be saved to edaps_experiments/exp-00001/work_dirs/local-exp00001/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483/panoptic_eval/panop_eval_22-11-2023_23-35-08-444390/visuals/231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483 by HardDiskBackend
_base_/default_runtime_mmdet_mr.py
_base_/models/maskrcnn_sepaspp_mitb5.py
_base_/datasets/uda_synthia_to_cityscapes_maskrcnn_panoptic.py
_base_/uda/dacs_a999_fdthings.py
_base_/schedules/adamw.py
_base_/schedules/poly10warm.py
Run job 231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483
DEBUG - PETROS 20-08-2023 - data root is : data/synthia/
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG - PETROS 20-08-2023 - data root is : data/cityscapes/
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG - PETROS 20-08-2023 - data root is : data/cityscapes
DEBUG - PETROS 19-08-2023 - MMSEG/CUSTOMDATASET - LOAD ANNOTATIONS PANOPTIC - DATASET TYPE:<class 'dict'>
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Number of gpus for training is: 1
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Samples per gpu is: 1
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Workers per gpu is: 4
DEBUG_PETROS 31/10/2023 - MMDET/APIS/TRAIN.PY - Batch_size: 1
2023-11-22 23:39:51,445 - mmdet - INFO - Iter [50/20000]	lr: 1.955e-06, eta: 1 day, 3:38:14, time: 4.987, data_time: 0.038, memory: 3476, decode.loss_seg: 2.7762, decode.acc_seg: 7.7849, rpn.loss_rpn_cls: 0.6746, rpn.loss_rpn_bbox: 0.1309, roi.loss_cls: 1.5670, roi.acc: 57.2598, roi.loss_bbox: 0.1152, roi.loss_mask: 1.9585, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.3186, mix.decode.acc_seg: 13.9597
2023-11-22 23:43:57,932 - mmdet - INFO - Iter [100/20000]	lr: 3.940e-06, eta: 1 day, 3:24:33, time: 4.930, data_time: 0.015, memory: 3476, decode.loss_seg: 2.7118, decode.acc_seg: 22.0158, rpn.loss_rpn_cls: 0.6228, rpn.loss_rpn_bbox: 0.1224, roi.loss_cls: 0.4514, roi.acc: 93.6641, roi.loss_bbox: 0.1491, roi.loss_mask: 1.2058, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.5704, mix.decode.acc_seg: 20.5564
2023-11-22 23:48:04,059 - mmdet - INFO - Iter [150/20000]	lr: 5.916e-06, eta: 1 day, 3:16:27, time: 4.923, data_time: 0.015, memory: 3476, decode.loss_seg: 2.4871, decode.acc_seg: 31.6320, rpn.loss_rpn_cls: 0.4947, rpn.loss_rpn_bbox: 0.0927, roi.loss_cls: 0.3005, roi.acc: 94.3359, roi.loss_bbox: 0.1504, roi.loss_mask: 0.9162, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.1924, mix.decode.acc_seg: 35.4098
2023-11-22 23:52:10,921 - mmdet - INFO - Iter [200/20000]	lr: 7.881e-06, eta: 1 day, 3:11:34, time: 4.937, data_time: 0.016, memory: 3596, decode.loss_seg: 2.3599, decode.acc_seg: 37.6138, rpn.loss_rpn_cls: 0.4192, rpn.loss_rpn_bbox: 0.1351, roi.loss_cls: 0.3698, roi.acc: 90.9570, roi.loss_bbox: 0.2204, roi.loss_mask: 0.7676, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.0699, mix.decode.acc_seg: 43.2056
2023-11-22 23:56:17,522 - mmdet - INFO - Iter [250/20000]	lr: 9.836e-06, eta: 1 day, 3:06:39, time: 4.932, data_time: 0.016, memory: 3596, decode.loss_seg: 2.0612, decode.acc_seg: 47.9245, rpn.loss_rpn_cls: 0.3321, rpn.loss_rpn_bbox: 0.1345, roi.loss_cls: 0.4171, roi.acc: 88.7891, roi.loss_bbox: 0.2928, roi.loss_mask: 0.7080, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.0677, mix.decode.acc_seg: 46.0359
2023-11-23 00:00:24,772 - mmdet - INFO - Iter [300/20000]	lr: 1.178e-05, eta: 1 day, 3:02:43, time: 4.945, data_time: 0.016, memory: 3596, decode.loss_seg: 1.7967, decode.acc_seg: 49.4114, rpn.loss_rpn_cls: 0.2409, rpn.loss_rpn_bbox: 0.1168, roi.loss_cls: 0.4575, roi.acc: 87.6250, roi.loss_bbox: 0.3996, roi.loss_mask: 0.6732, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 1.0017, mix.decode.acc_seg: 48.6895
2023-11-23 00:04:30,267 - mmdet - INFO - Iter [350/20000]	lr: 1.372e-05, eta: 1 day, 2:57:05, time: 4.910, data_time: 0.015, memory: 3596, decode.loss_seg: 1.7092, decode.acc_seg: 50.7538, rpn.loss_rpn_cls: 0.2044, rpn.loss_rpn_bbox: 0.0987, roi.loss_cls: 0.4756, roi.acc: 87.1797, roi.loss_bbox: 0.3936, roi.loss_mask: 0.6420, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.9691, mix.decode.acc_seg: 52.8112
2023-11-23 00:08:37,994 - mmdet - INFO - Iter [400/20000]	lr: 1.564e-05, eta: 1 day, 2:53:39, time: 4.955, data_time: 0.015, memory: 3596, decode.loss_seg: 1.5767, decode.acc_seg: 50.3535, rpn.loss_rpn_cls: 0.2093, rpn.loss_rpn_bbox: 0.0878, roi.loss_cls: 0.4768, roi.acc: 88.3594, roi.loss_bbox: 0.3581, roi.loss_mask: 0.6462, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.8916, mix.decode.acc_seg: 50.8062
2023-11-23 00:12:46,834 - mmdet - INFO - Iter [450/20000]	lr: 1.756e-05, eta: 1 day, 2:50:52, time: 4.977, data_time: 0.016, memory: 3617, decode.loss_seg: 1.4097, decode.acc_seg: 56.1250, rpn.loss_rpn_cls: 0.1709, rpn.loss_rpn_bbox: 0.1164, roi.loss_cls: 0.5044, roi.acc: 85.1406, roi.loss_bbox: 0.4627, roi.loss_mask: 0.6267, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.7759, mix.decode.acc_seg: 58.3662
2023-11-23 00:16:52,389 - mmdet - INFO - Iter [500/20000]	lr: 1.946e-05, eta: 1 day, 2:45:41, time: 4.911, data_time: 0.016, memory: 3617, decode.loss_seg: 1.3211, decode.acc_seg: 58.7209, rpn.loss_rpn_cls: 0.1686, rpn.loss_rpn_bbox: 0.1009, roi.loss_cls: 0.4934, roi.acc: 84.7266, roi.loss_bbox: 0.5054, roi.loss_mask: 0.6019, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.6540, mix.decode.acc_seg: 55.9460
2023-11-23 00:20:57,860 - mmdet - INFO - Iter [550/20000]	lr: 2.136e-05, eta: 1 day, 2:40:39, time: 4.909, data_time: 0.015, memory: 3617, decode.loss_seg: 1.3240, decode.acc_seg: 59.3903, rpn.loss_rpn_cls: 0.1585, rpn.loss_rpn_bbox: 0.1003, roi.loss_cls: 0.4758, roi.acc: 85.8164, roi.loss_bbox: 0.4737, roi.loss_mask: 0.5824, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.7062, mix.decode.acc_seg: 55.1449
2023-11-23 00:25:05,780 - mmdet - INFO - Iter [600/20000]	lr: 2.324e-05, eta: 1 day, 2:37:06, time: 4.958, data_time: 0.016, memory: 3617, decode.loss_seg: 1.2303, decode.acc_seg: 60.1519, rpn.loss_rpn_cls: 0.1549, rpn.loss_rpn_bbox: 0.1065, roi.loss_cls: 0.4803, roi.acc: 84.9141, roi.loss_bbox: 0.5172, roi.loss_mask: 0.5626, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.6337, mix.decode.acc_seg: 56.7105
2023-11-23 00:29:12,327 - mmdet - INFO - Iter [650/20000]	lr: 2.512e-05, eta: 1 day, 2:32:46, time: 4.931, data_time: 0.015, memory: 3617, decode.loss_seg: 1.2834, decode.acc_seg: 61.2671, rpn.loss_rpn_cls: 0.1747, rpn.loss_rpn_bbox: 0.1111, roi.loss_cls: 0.4746, roi.acc: 84.6680, roi.loss_bbox: 0.5415, roi.loss_mask: 0.5629, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.7279, mix.decode.acc_seg: 53.3043
2023-11-23 00:33:20,422 - mmdet - INFO - Iter [700/20000]	lr: 2.698e-05, eta: 1 day, 2:29:11, time: 4.962, data_time: 0.016, memory: 3617, decode.loss_seg: 1.1038, decode.acc_seg: 64.9596, rpn.loss_rpn_cls: 0.1533, rpn.loss_rpn_bbox: 0.0879, roi.loss_cls: 0.4337, roi.acc: 85.7031, roi.loss_bbox: 0.4804, roi.loss_mask: 0.5607, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.6496, mix.decode.acc_seg: 59.5478
2023-11-23 00:37:29,175 - mmdet - INFO - Iter [750/20000]	lr: 2.884e-05, eta: 1 day, 2:25:48, time: 4.975, data_time: 0.015, memory: 3617, decode.loss_seg: 1.0749, decode.acc_seg: 66.4533, rpn.loss_rpn_cls: 0.1498, rpn.loss_rpn_bbox: 0.1075, roi.loss_cls: 0.4637, roi.acc: 85.0586, roi.loss_bbox: 0.5191, roi.loss_mask: 0.6071, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.6295, mix.decode.acc_seg: 57.2791
2023-11-23 00:41:36,988 - mmdet - INFO - Iter [800/20000]	lr: 3.068e-05, eta: 1 day, 2:21:57, time: 4.956, data_time: 0.016, memory: 3617, decode.loss_seg: 1.0163, decode.acc_seg: 68.1232, rpn.loss_rpn_cls: 0.1811, rpn.loss_rpn_bbox: 0.1291, roi.loss_cls: 0.5160, roi.acc: 83.0625, roi.loss_bbox: 0.6053, roi.loss_mask: 0.5431, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5824, mix.decode.acc_seg: 60.8618
2023-11-23 00:45:44,968 - mmdet - INFO - Iter [850/20000]	lr: 3.252e-05, eta: 1 day, 2:18:08, time: 4.960, data_time: 0.016, memory: 3617, decode.loss_seg: 0.9854, decode.acc_seg: 69.0079, rpn.loss_rpn_cls: 0.1768, rpn.loss_rpn_bbox: 0.1016, roi.loss_cls: 0.4722, roi.acc: 84.8594, roi.loss_bbox: 0.4909, roi.loss_mask: 0.5325, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5351, mix.decode.acc_seg: 63.6539
2023-11-23 00:49:51,917 - mmdet - INFO - Iter [900/20000]	lr: 3.434e-05, eta: 1 day, 2:13:55, time: 4.939, data_time: 0.016, memory: 3617, decode.loss_seg: 0.9577, decode.acc_seg: 70.6422, rpn.loss_rpn_cls: 0.1569, rpn.loss_rpn_bbox: 0.0955, roi.loss_cls: 0.4461, roi.acc: 85.3594, roi.loss_bbox: 0.5169, roi.loss_mask: 0.5232, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4661, mix.decode.acc_seg: 63.2454
2023-11-23 00:53:57,595 - mmdet - INFO - Iter [950/20000]	lr: 3.616e-05, eta: 1 day, 2:09:17, time: 4.914, data_time: 0.016, memory: 3622, decode.loss_seg: 1.0190, decode.acc_seg: 67.1801, rpn.loss_rpn_cls: 0.1380, rpn.loss_rpn_bbox: 0.0945, roi.loss_cls: 0.4706, roi.acc: 84.5312, roi.loss_bbox: 0.4952, roi.loss_mask: 0.5396, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5782, mix.decode.acc_seg: 60.7934
2023-11-23 00:58:03,529 - mmdet - INFO - Exp name: 231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483
2023-11-23 00:58:03,530 - mmdet - INFO - Iter [1000/20000]	lr: 3.796e-05, eta: 1 day, 2:04:47, time: 4.919, data_time: 0.015, memory: 3622, decode.loss_seg: 0.9185, decode.acc_seg: 71.5865, rpn.loss_rpn_cls: 0.1300, rpn.loss_rpn_bbox: 0.0851, roi.loss_cls: 0.3784, roi.acc: 87.8008, roi.loss_bbox: 0.4184, roi.loss_mask: 0.5281, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5987, mix.decode.acc_seg: 58.0735
2023-11-23 01:02:10,302 - mmdet - INFO - Iter [1050/20000]	lr: 3.976e-05, eta: 1 day, 2:00:34, time: 4.935, data_time: 0.016, memory: 3622, decode.loss_seg: 0.7715, decode.acc_seg: 74.6097, rpn.loss_rpn_cls: 0.1274, rpn.loss_rpn_bbox: 0.0898, roi.loss_cls: 0.4154, roi.acc: 86.2656, roi.loss_bbox: 0.4520, roi.loss_mask: 0.5094, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4787, mix.decode.acc_seg: 64.9482
2023-11-23 01:06:18,133 - mmdet - INFO - Iter [1100/20000]	lr: 4.154e-05, eta: 1 day, 1:56:41, time: 4.957, data_time: 0.016, memory: 3622, decode.loss_seg: 0.7989, decode.acc_seg: 73.3589, rpn.loss_rpn_cls: 0.1362, rpn.loss_rpn_bbox: 0.1051, roi.loss_cls: 0.4186, roi.acc: 85.5078, roi.loss_bbox: 0.5060, roi.loss_mask: 0.5104, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4668, mix.decode.acc_seg: 61.9156
2023-11-23 01:10:23,742 - mmdet - INFO - Iter [1150/20000]	lr: 4.332e-05, eta: 1 day, 1:52:09, time: 4.912, data_time: 0.015, memory: 3622, decode.loss_seg: 0.8452, decode.acc_seg: 72.8965, rpn.loss_rpn_cls: 0.1107, rpn.loss_rpn_bbox: 0.0850, roi.loss_cls: 0.4259, roi.acc: 85.7695, roi.loss_bbox: 0.4970, roi.loss_mask: 0.5101, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5244, mix.decode.acc_seg: 57.1325
2023-11-23 01:14:30,376 - mmdet - INFO - Iter [1200/20000]	lr: 4.508e-05, eta: 1 day, 1:47:56, time: 4.933, data_time: 0.016, memory: 3622, decode.loss_seg: 0.7580, decode.acc_seg: 75.9218, rpn.loss_rpn_cls: 0.1173, rpn.loss_rpn_bbox: 0.0867, roi.loss_cls: 0.4155, roi.acc: 86.3789, roi.loss_bbox: 0.4753, roi.loss_mask: 0.5096, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4226, mix.decode.acc_seg: 63.8630
2023-11-23 01:18:36,346 - mmdet - INFO - Iter [1250/20000]	lr: 4.684e-05, eta: 1 day, 1:43:33, time: 4.919, data_time: 0.015, memory: 3622, decode.loss_seg: 0.8636, decode.acc_seg: 71.8681, rpn.loss_rpn_cls: 0.1585, rpn.loss_rpn_bbox: 0.1120, roi.loss_cls: 0.4597, roi.acc: 85.4531, roi.loss_bbox: 0.4897, roi.loss_mask: 0.5060, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4479, mix.decode.acc_seg: 63.2015
2023-11-23 01:22:41,623 - mmdet - INFO - Iter [1300/20000]	lr: 4.859e-05, eta: 1 day, 1:39:02, time: 4.906, data_time: 0.015, memory: 3622, decode.loss_seg: 0.7211, decode.acc_seg: 74.6929, rpn.loss_rpn_cls: 0.2115, rpn.loss_rpn_bbox: 0.1040, roi.loss_cls: 0.4016, roi.acc: 87.7773, roi.loss_bbox: 0.4235, roi.loss_mask: 0.5031, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5015, mix.decode.acc_seg: 55.3247
2023-11-23 01:26:46,776 - mmdet - INFO - Iter [1350/20000]	lr: 5.032e-05, eta: 1 day, 1:34:31, time: 4.903, data_time: 0.015, memory: 3622, decode.loss_seg: 0.8325, decode.acc_seg: 72.2878, rpn.loss_rpn_cls: 0.1139, rpn.loss_rpn_bbox: 0.0825, roi.loss_cls: 0.3737, roi.acc: 88.4102, roi.loss_bbox: 0.4237, roi.loss_mask: 0.5151, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5783, mix.decode.acc_seg: 58.8831
2023-11-23 01:30:52,320 - mmdet - INFO - Iter [1400/20000]	lr: 5.205e-05, eta: 1 day, 1:30:07, time: 4.911, data_time: 0.016, memory: 3622, decode.loss_seg: 0.6726, decode.acc_seg: 76.6634, rpn.loss_rpn_cls: 0.1502, rpn.loss_rpn_bbox: 0.1017, roi.loss_cls: 0.4265, roi.acc: 86.2734, roi.loss_bbox: 0.4988, roi.loss_mask: 0.4935, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3817, mix.decode.acc_seg: 64.3538
2023-11-23 01:34:58,483 - mmdet - INFO - Iter [1450/20000]	lr: 5.376e-05, eta: 1 day, 1:25:52, time: 4.923, data_time: 0.016, memory: 3622, decode.loss_seg: 0.7266, decode.acc_seg: 76.7633, rpn.loss_rpn_cls: 0.1716, rpn.loss_rpn_bbox: 0.1187, roi.loss_cls: 0.4484, roi.acc: 85.1211, roi.loss_bbox: 0.5214, roi.loss_mask: 0.4922, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4278, mix.decode.acc_seg: 61.7201
2023-11-23 01:39:06,571 - mmdet - INFO - Iter [1500/20000]	lr: 5.547e-05, eta: 1 day, 1:22:01, time: 4.962, data_time: 0.016, memory: 3622, decode.loss_seg: 0.6515, decode.acc_seg: 75.9368, rpn.loss_rpn_cls: 0.1369, rpn.loss_rpn_bbox: 0.1179, roi.loss_cls: 0.4326, roi.acc: 85.1719, roi.loss_bbox: 0.5217, roi.loss_mask: 0.4615, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3540, mix.decode.acc_seg: 63.8002
2023-11-23 01:43:15,057 - mmdet - INFO - Iter [1550/20000]	lr: 5.535e-05, eta: 1 day, 1:18:14, time: 4.970, data_time: 0.015, memory: 3622, decode.loss_seg: 0.6598, decode.acc_seg: 75.1682, rpn.loss_rpn_cls: 0.1510, rpn.loss_rpn_bbox: 0.1118, roi.loss_cls: 0.4319, roi.acc: 85.9414, roi.loss_bbox: 0.4975, roi.loss_mask: 0.4796, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3865, mix.decode.acc_seg: 62.4079
2023-11-23 01:47:21,558 - mmdet - INFO - Iter [1600/20000]	lr: 5.520e-05, eta: 1 day, 1:14:03, time: 4.930, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5804, decode.acc_seg: 74.8991, rpn.loss_rpn_cls: 0.1174, rpn.loss_rpn_bbox: 0.0963, roi.loss_cls: 0.4363, roi.acc: 86.4258, roi.loss_bbox: 0.5293, roi.loss_mask: 0.4724, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3756, mix.decode.acc_seg: 64.6949
2023-11-23 01:51:28,606 - mmdet - INFO - Iter [1650/20000]	lr: 5.505e-05, eta: 1 day, 1:09:59, time: 4.941, data_time: 0.015, memory: 3622, decode.loss_seg: 0.7082, decode.acc_seg: 74.9773, rpn.loss_rpn_cls: 0.1542, rpn.loss_rpn_bbox: 0.1064, roi.loss_cls: 0.4105, roi.acc: 87.0781, roi.loss_bbox: 0.4884, roi.loss_mask: 0.5042, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.5051, mix.decode.acc_seg: 60.7203
2023-11-23 01:55:35,438 - mmdet - INFO - Iter [1700/20000]	lr: 5.490e-05, eta: 1 day, 1:05:51, time: 4.937, data_time: 0.015, memory: 3622, decode.loss_seg: 0.6608, decode.acc_seg: 77.6750, rpn.loss_rpn_cls: 0.1193, rpn.loss_rpn_bbox: 0.1008, roi.loss_cls: 0.4198, roi.acc: 85.7539, roi.loss_bbox: 0.5001, roi.loss_mask: 0.4727, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4017, mix.decode.acc_seg: 62.8293
2023-11-23 01:59:42,894 - mmdet - INFO - Iter [1750/20000]	lr: 5.475e-05, eta: 1 day, 1:01:51, time: 4.949, data_time: 0.015, memory: 3622, decode.loss_seg: 0.7126, decode.acc_seg: 74.9193, rpn.loss_rpn_cls: 0.1508, rpn.loss_rpn_bbox: 0.1088, roi.loss_cls: 0.3954, roi.acc: 86.2578, roi.loss_bbox: 0.4984, roi.loss_mask: 0.4656, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4889, mix.decode.acc_seg: 60.8184
2023-11-23 02:03:50,932 - mmdet - INFO - Iter [1800/20000]	lr: 5.460e-05, eta: 1 day, 0:57:56, time: 4.961, data_time: 0.016, memory: 3622, decode.loss_seg: 0.5920, decode.acc_seg: 77.0602, rpn.loss_rpn_cls: 0.1296, rpn.loss_rpn_bbox: 0.1007, roi.loss_cls: 0.4108, roi.acc: 85.7852, roi.loss_bbox: 0.5378, roi.loss_mask: 0.4861, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3766, mix.decode.acc_seg: 62.5768
2023-11-23 02:07:58,907 - mmdet - INFO - Iter [1850/20000]	lr: 5.445e-05, eta: 1 day, 0:53:59, time: 4.960, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5491, decode.acc_seg: 80.3537, rpn.loss_rpn_cls: 0.1083, rpn.loss_rpn_bbox: 0.1005, roi.loss_cls: 0.3558, roi.acc: 87.8320, roi.loss_bbox: 0.4620, roi.loss_mask: 0.4681, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3522, mix.decode.acc_seg: 65.0087
2023-11-23 02:12:06,837 - mmdet - INFO - Iter [1900/20000]	lr: 5.430e-05, eta: 1 day, 0:50:02, time: 4.959, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5440, decode.acc_seg: 80.3575, rpn.loss_rpn_cls: 0.1289, rpn.loss_rpn_bbox: 0.0980, roi.loss_cls: 0.4311, roi.acc: 85.8672, roi.loss_bbox: 0.5189, roi.loss_mask: 0.4627, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3586, mix.decode.acc_seg: 64.8570
2023-11-23 02:16:12,455 - mmdet - INFO - Iter [1950/20000]	lr: 5.415e-05, eta: 1 day, 0:45:42, time: 4.912, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5418, decode.acc_seg: 79.3007, rpn.loss_rpn_cls: 0.1313, rpn.loss_rpn_bbox: 0.0948, roi.loss_cls: 0.4029, roi.acc: 86.4258, roi.loss_bbox: 0.4993, roi.loss_mask: 0.4453, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3571, mix.decode.acc_seg: 61.5807
2023-11-23 02:20:18,561 - mmdet - INFO - Exp name: 231122_2335_syn2cs_dacs_rcs001_cpl_maskrcnn_mitb5_poly10warm_s0_ca483
2023-11-23 02:20:18,562 - mmdet - INFO - Iter [2000/20000]	lr: 5.400e-05, eta: 1 day, 0:41:28, time: 4.922, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5268, decode.acc_seg: 80.7863, rpn.loss_rpn_cls: 0.1274, rpn.loss_rpn_bbox: 0.1008, roi.loss_cls: 0.4104, roi.acc: 86.0039, roi.loss_bbox: 0.5147, roi.loss_mask: 0.4711, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3265, mix.decode.acc_seg: 66.9399
2023-11-23 02:24:26,359 - mmdet - INFO - Iter [2050/20000]	lr: 5.385e-05, eta: 1 day, 0:37:29, time: 4.956, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5450, decode.acc_seg: 81.4415, rpn.loss_rpn_cls: 0.1060, rpn.loss_rpn_bbox: 0.1029, roi.loss_cls: 0.4067, roi.acc: 86.5273, roi.loss_bbox: 0.4944, roi.loss_mask: 0.4515, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2869, mix.decode.acc_seg: 66.6565
2023-11-23 02:28:33,708 - mmdet - INFO - Iter [2100/20000]	lr: 5.370e-05, eta: 1 day, 0:33:25, time: 4.947, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5420, decode.acc_seg: 76.7546, rpn.loss_rpn_cls: 0.0938, rpn.loss_rpn_bbox: 0.0869, roi.loss_cls: 0.3371, roi.acc: 88.7500, roi.loss_bbox: 0.4200, roi.loss_mask: 0.4274, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2212, mix.decode.acc_seg: 69.1292
2023-11-23 02:32:41,369 - mmdet - INFO - Iter [2150/20000]	lr: 5.355e-05, eta: 1 day, 0:29:24, time: 4.953, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5240, decode.acc_seg: 81.4298, rpn.loss_rpn_cls: 0.1133, rpn.loss_rpn_bbox: 0.0860, roi.loss_cls: 0.3571, roi.acc: 88.0156, roi.loss_bbox: 0.4208, roi.loss_mask: 0.4534, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3779, mix.decode.acc_seg: 65.3472
2023-11-23 02:36:47,399 - mmdet - INFO - Iter [2200/20000]	lr: 5.340e-05, eta: 1 day, 0:25:10, time: 4.921, data_time: 0.016, memory: 3622, decode.loss_seg: 0.4943, decode.acc_seg: 81.5851, rpn.loss_rpn_cls: 0.1205, rpn.loss_rpn_bbox: 0.0929, roi.loss_cls: 0.3763, roi.acc: 87.8047, roi.loss_bbox: 0.4550, roi.loss_mask: 0.4417, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2625, mix.decode.acc_seg: 65.5942
2023-11-23 02:40:52,038 - mmdet - INFO - Iter [2250/20000]	lr: 5.325e-05, eta: 1 day, 0:20:45, time: 4.893, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4889, decode.acc_seg: 80.6001, rpn.loss_rpn_cls: 0.1013, rpn.loss_rpn_bbox: 0.0932, roi.loss_cls: 0.3788, roi.acc: 87.3828, roi.loss_bbox: 0.4785, roi.loss_mask: 0.4377, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3168, mix.decode.acc_seg: 64.9287
2023-11-23 02:44:57,695 - mmdet - INFO - Iter [2300/20000]	lr: 5.310e-05, eta: 1 day, 0:16:28, time: 4.913, data_time: 0.016, memory: 3622, decode.loss_seg: 0.5146, decode.acc_seg: 78.2970, rpn.loss_rpn_cls: 0.1121, rpn.loss_rpn_bbox: 0.0991, roi.loss_cls: 0.4124, roi.acc: 85.8516, roi.loss_bbox: 0.5277, roi.loss_mask: 0.4345, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4184, mix.decode.acc_seg: 63.3752
2023-11-23 02:49:03,200 - mmdet - INFO - Iter [2350/20000]	lr: 5.295e-05, eta: 1 day, 0:12:11, time: 4.910, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4744, decode.acc_seg: 83.7416, rpn.loss_rpn_cls: 0.0956, rpn.loss_rpn_bbox: 0.0899, roi.loss_cls: 0.3813, roi.acc: 86.9531, roi.loss_bbox: 0.5112, roi.loss_mask: 0.4382, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2627, mix.decode.acc_seg: 69.6062
2023-11-23 02:53:10,998 - mmdet - INFO - Iter [2400/20000]	lr: 5.280e-05, eta: 1 day, 0:08:11, time: 4.956, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4979, decode.acc_seg: 79.2257, rpn.loss_rpn_cls: 0.1044, rpn.loss_rpn_bbox: 0.0809, roi.loss_cls: 0.3681, roi.acc: 87.4258, roi.loss_bbox: 0.4622, roi.loss_mask: 0.4046, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3586, mix.decode.acc_seg: 65.2297
2023-11-23 02:57:18,089 - mmdet - INFO - Iter [2450/20000]	lr: 5.265e-05, eta: 1 day, 0:04:06, time: 4.942, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4791, decode.acc_seg: 81.5968, rpn.loss_rpn_cls: 0.0966, rpn.loss_rpn_bbox: 0.0742, roi.loss_cls: 0.3857, roi.acc: 87.0703, roi.loss_bbox: 0.4863, roi.loss_mask: 0.4193, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3527, mix.decode.acc_seg: 63.1532
2023-11-23 03:01:22,496 - mmdet - INFO - Iter [2500/20000]	lr: 5.250e-05, eta: 23:59:42, time: 4.888, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5762, decode.acc_seg: 78.4494, rpn.loss_rpn_cls: 0.1026, rpn.loss_rpn_bbox: 0.0932, roi.loss_cls: 0.3595, roi.acc: 87.5312, roi.loss_bbox: 0.4692, roi.loss_mask: 0.4457, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3883, mix.decode.acc_seg: 63.5456
2023-11-23 03:05:27,993 - mmdet - INFO - Iter [2550/20000]	lr: 5.235e-05, eta: 23:55:27, time: 4.910, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5451, decode.acc_seg: 80.3604, rpn.loss_rpn_cls: 0.1219, rpn.loss_rpn_bbox: 0.0954, roi.loss_cls: 0.4192, roi.acc: 85.9453, roi.loss_bbox: 0.5223, roi.loss_mask: 0.4509, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.4492, mix.decode.acc_seg: 66.5338
2023-11-23 03:09:33,650 - mmdet - INFO - Iter [2600/20000]	lr: 5.220e-05, eta: 23:51:12, time: 4.913, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5907, decode.acc_seg: 79.4717, rpn.loss_rpn_cls: 0.1050, rpn.loss_rpn_bbox: 0.1001, roi.loss_cls: 0.4024, roi.acc: 85.2266, roi.loss_bbox: 0.5510, roi.loss_mask: 0.4299, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3371, mix.decode.acc_seg: 68.2933
2023-11-23 03:13:39,408 - mmdet - INFO - Iter [2650/20000]	lr: 5.205e-05, eta: 23:46:59, time: 4.915, data_time: 0.015, memory: 3622, decode.loss_seg: 0.5072, decode.acc_seg: 81.3884, rpn.loss_rpn_cls: 0.1158, rpn.loss_rpn_bbox: 0.0979, roi.loss_cls: 0.4189, roi.acc: 85.0586, roi.loss_bbox: 0.5695, roi.loss_mask: 0.4355, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2779, mix.decode.acc_seg: 66.8142
2023-11-23 03:17:45,304 - mmdet - INFO - Iter [2700/20000]	lr: 5.190e-05, eta: 23:42:47, time: 4.918, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4547, decode.acc_seg: 80.9537, rpn.loss_rpn_cls: 0.0859, rpn.loss_rpn_bbox: 0.0761, roi.loss_cls: 0.3446, roi.acc: 87.9062, roi.loss_bbox: 0.4509, roi.loss_mask: 0.4107, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.3303, mix.decode.acc_seg: 67.2820
2023-11-23 03:21:50,184 - mmdet - INFO - Iter [2750/20000]	lr: 5.175e-05, eta: 23:38:28, time: 4.898, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4753, decode.acc_seg: 81.4528, rpn.loss_rpn_cls: 0.0897, rpn.loss_rpn_bbox: 0.0761, roi.loss_cls: 0.3639, roi.acc: 87.5312, roi.loss_bbox: 0.4609, roi.loss_mask: 0.4321, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2964, mix.decode.acc_seg: 67.5503
2023-11-23 03:25:54,781 - mmdet - INFO - Iter [2800/20000]	lr: 5.160e-05, eta: 23:34:09, time: 4.892, data_time: 0.015, memory: 3622, decode.loss_seg: 0.4854, decode.acc_seg: 79.0353, rpn.loss_rpn_cls: 0.0997, rpn.loss_rpn_bbox: 0.0943, roi.loss_cls: 0.3618, roi.acc: 87.1172, roi.loss_bbox: 0.4838, roi.loss_mask: 0.4031, src.loss_imnet_feat_dist: nan, mix.decode.loss_seg: 0.2975, mix.decode.acc_seg: 67.2425
[W python_anomaly_mode.cpp:104] Warning: Error detected in NormBackward1. Traceback of forward call that caused the error:
  File "run_experiments.py", line 146, in <module>
    train_mmdet.main([config_files[i]])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/tools/train_mmdet.py", line 127, in main
    train_detector(model, datasets, cfg, distributed=distributed, validate=(not cfg.only_train), timestamp=timestamp,  meta=meta,)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/apis/train.py", line 214, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 176, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 65, in train
    outputs = self.model.train_step(data_batch, self.optimizer, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/parallel/data_parallel.py", line 77, in train_step
    return self.module.train_step(*inputs[0], **kwargs[0])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 147, in train_step
    log_vars = self(**data_batch) # self(**data_batch) is a Python syntax that involves using the double asterisks (**) to unpack a dictionary and pass its key-value pairs as keyword arguments to a function or method.
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/fp16_utils.py", line 116, in new_func
    return old_func(*args, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 217, in forward_train
    feat_loss, feat_log = self.calc_feat_dist(img, gt_semantic_seg, src_feat)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 135, in calc_feat_dist
    feat_dist = self.masked_feat_dist(feat[lay], feat_imnet[lay], fdist_mask)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 115, in masked_feat_dist
    pw_feat_dist = torch.norm(feat_diff, dim=1, p=2)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/functional.py", line 1337, in norm
    return _VF.norm(input, p, _dim, keepdim=keepdim)  # type: ignore
 (function _print_stack)
Traceback (most recent call last):
  File "run_experiments.py", line 146, in <module>
    train_mmdet.main([config_files[i]])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/tools/train_mmdet.py", line 127, in main
    train_detector(model, datasets, cfg, distributed=distributed, validate=(not cfg.only_train), timestamp=timestamp,  meta=meta,)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/apis/train.py", line 214, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 176, in run
    iter_runner(iter_loaders[i], **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/iter_based_runner.py", line 65, in train
    outputs = self.model.train_step(data_batch, self.optimizer, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/parallel/data_parallel.py", line 77, in train_step
    return self.module.train_step(*inputs[0], **kwargs[0])
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 147, in train_step
    log_vars = self(**data_batch) # self(**data_batch) is a Python syntax that involves using the double asterisks (**) to unpack a dictionary and pass its key-value pairs as keyword arguments to a function or method.
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/mmcv/runner/fp16_utils.py", line 116, in new_func
    return old_func(*args, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/scratch_net/biwidl202/ppolydorou/project_edaps/edaps/mmdet/models/uda/dacs.py", line 232, in forward_train
    clean_loss.backward()
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/tensor.py", line 221, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/scratch_net/biwidl202/ppolydorou/conda_envs/edaps/lib/python3.8/site-packages/torch/autograd/__init__.py", line 130, in backward
    Variable._execution_engine.run_backward(
RuntimeError: Function 'NormBackward1' returned nan values in its 0th output.
/scratch/slurm/spool/job765897/slurm_script: line 43: kill: (16083) - No such process
/scratch/slurm/spool/job765897/slurm_script: line 44: kill: (16083) - No such process
